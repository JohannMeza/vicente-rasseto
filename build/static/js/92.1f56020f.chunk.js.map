{"version":3,"file":"static/js/92.1f56020f.chunk.js","mappings":"kLAKMA,EAAiB,WACrB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,SAASC,SAAS,SAAC,UAAD,OAC9B,SAAC,KAAD,CAAOD,KAAK,OAAOC,SAAS,SAAC,UAAD,UAKlC,WAAeC,EAAAA,EAAAA,MAAKH,I,oTCEdI,EAAW,CACfC,YAAa,GACbC,KAAM,EACNC,MAAO,GAGHC,EAAc,CAClBC,cAAe,GACfC,eAAe,EACfC,QAAQ,GAGJC,EAAkB,CACtBH,cAAe,KACfE,QAAQ,GAGJE,EAAa,CACjB,CAAEC,MAAO,SAAUC,OAAO,GAC1B,CAAED,MAAO,WAAYC,OAAO,IAGf,SAASC,IACtB,IAcMC,GAAYC,EAAAA,EAAAA,KAClB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAoCF,EAAAA,EAAAA,UAASf,GAA7C,eAAOkB,EAAP,KAAmBC,EAAnB,KACA,GAAwBJ,EAAAA,EAAAA,WAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA6EC,EAAAA,EAAAA,GAAkBlB,GAAa,GAArGmB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,OAAQC,EAA9B,EAA8BA,UAAWC,EAAzC,EAAyCA,sBAAuBC,EAAhE,EAAgEA,UAChE,GAAiDC,EAAAA,EAAAA,GAAQrB,GAAzD,eAAOsB,EAAP,KAAiBC,EAAjB,KAAoCC,EAApC,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAc,WAAiC,IAAhClC,EAA+B,uDAAjB,GAAIC,EAAa,uDAAN,EAC5CW,GAAU,IACVuB,EAAAA,EAAAA,GAAgB,CACdvC,KAAMwC,EAAAA,GAAAA,UAAAA,SAAAA,MACNC,KAAMR,EACNS,UAAWC,EAAAA,GACXtB,YAAY,EACZjB,YAAAA,EACAC,KAAAA,EACAuC,QAAS,SAACC,GACR,IAAMzC,EAA6ByC,EAA7BzC,YAAaE,EAAgBuC,EAAhBvC,MAAOD,EAASwC,EAATxC,OACxBA,EACFiB,EAAc,CAAElB,YAAAA,EAAaE,MAAAA,EAAOD,KAAAA,IACpCe,EAAYyB,EAAKnB,MACjBV,GAAU,IAEZ8B,MAAO,SAACC,GACN/B,GAAU,IACVgC,EAAAA,EAAAA,GAAY,CAAEC,QAASF,EAAIG,WAAYC,KAAM,QAASC,IAAK,SAK3DC,GAAa,YA7CF,WAA0B,IAAzBC,EAAwB,uDAAV5B,EAC1B6B,GAAI,UAAO3B,GAQf,GANI,kBAAmB0B,IACrBC,EAAK/C,cAAiB8C,EAAY9C,cAA2D,GAA3C,0CAGpDqB,GAAU,UAAI0B,IACdC,QAAQC,IAAIF,EAAMG,OAAOC,OAAOJ,GAAMK,OAAM,SAACC,GAAD,MAAa,KAANA,MAC/CP,IAAgB5B,EAClB,OAAOgC,OAAOC,OAAOJ,GAAMK,OAAM,SAACC,GAAD,MAAa,KAANA,MAoCtCC,KACF9C,GAAU,IACVuB,EAAAA,EAAAA,GAAgB,CACdvC,KAAMwC,EAAAA,GAAAA,UAAAA,SAAAA,IACNC,KAAMf,EACNgB,UAAWC,EAAAA,GACXC,QAAS,SAACC,GACRP,KACAd,GAAQ,GACRO,IACAf,GAAU,IACVgC,EAAAA,EAAAA,GAAY,CAAEC,QAASJ,EAAKK,WAAYC,KAAM,UAAWC,IAAK,MAEhEN,MAAO,SAACC,GACNhB,IACAP,GAAQ,GACRR,GAAU,IACVgC,EAAAA,EAAAA,GAAY,CAAEC,QAASF,EAAIG,WAAYC,KAAM,QAASC,IAAK,UAM7DW,GAAa,WACjBvC,GAAQ,GACRW,KAYF,OAJA6B,EAAAA,EAAAA,YAAU,WACR1B,OACC,KAGD,UAAC,IAAD,YACE,UAAC,IAAD,CAAO2B,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,UAAD,CAAgBC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,cAElD,SAAC,oBAAD,CACEF,QAAQ,gBACRhB,KAAK,QACLkB,MAAM,eACNC,QAAS,kBAAM9C,GAAQ,UAI3B,mBAEA,UAAC,IAAD,YACE,SAAC,kBAAD,CAAwB2C,QAAQ,KAAKC,UAAU,MAA/C,qCACA,mBACA,UAAC,KAAD,CAAMG,WAAS,EAACL,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,mBAAD,CAAyB5D,MAAM,SAAS6D,KAAK,gBAAgB5D,MAAOmB,EAASzB,cAAemE,SAAUzC,OAExG,SAAC,KAAD,CAAMsC,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,oBAAD,CAA0B5D,MAAM,SAAS6D,KAAK,SAASE,KAAMhE,EAAYE,MAAOmB,EAASvB,OAAQiE,SAAUzC,UAG/G,mBACA,SAAC,IAAD,CACEH,UAAW,kBAAMI,KACjB0C,WAAY,kBAAMvC,YAItB,mBAEA,SAAC,oBAAD,CACEjB,WAAYA,EACZC,cAAeA,EACfwD,aAAcxC,GAHhB,UAKE,UAAC,IAAD,CAAOyC,cAAY,EAAC,aAAW,eAA/B,WACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,sBACA,SAAC,IAAD,6BACA,SAAC,IAAD,iCAIJ,SAAC,IAAD,UACG5D,EAAS6D,OAAS,EACjB7D,EAAS8D,KAAI,SAACC,EAAIC,GAAL,OACX,UAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,WACE,SAAC,IAAD,UAAYJ,EAAG1E,iBACf,SAAC,IAAD,UAAY0E,EAAGzE,cAAgB,gBAAkB,sBACjD,SAAC,IAAD,WACE,UAAC,IAAD,CAAOwD,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,wBAAD,CACEG,MAAM,SACNkB,KAAMC,EAAAA,EAAAA,KACNlB,QAAS,kBArEV,SAACY,GACpB1D,GAAQ,GACRG,EAAQuD,GAmE2BO,CAAaP,OAG9B,SAAC,wBAAD,CACEb,MAAM,WACNkB,KAAMC,EAAAA,EAAAA,UAGR,SAAC,oBAAD,CACEnB,MAAO,aACPF,QAAQ,kBACRhB,KAAK,QACLmB,QAAS,kBAAMlC,EAASsD,EAAAA,EAAAA,gBAA4BR,EAAGS,eApBZR,OA2BrD,SAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACE,SAAC,IAAD,CAAWM,QAAS,EAAGC,MAAM,SAA7B,mEASV,UAAC,UAAD,CACEtE,KAAMA,EACNC,QAASuC,GACT+B,SAAU,IACVC,WAAW,EACXC,SAAS,KACT3B,MAAM,eANR,WAQE,UAAC,KAAD,CAAME,WAAS,EAACL,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,mBAAD,CACE5D,MAAM,6BACN6D,KAAK,gBACLC,SAAU7C,EACVhB,MAAOY,EAAKlB,cACZsC,MAAOlB,EAAOpB,mBAGlB,SAAC,KAAD,CAAMgE,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,oBAAD,CACE5D,MAAM,SACN+D,KAAMhE,EACN8D,KAAK,SACL5D,MAAOY,EAAKhB,OACZiE,SAAU7C,OAGd,SAAC,KAAD,CAAM0C,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,oBAAD,CACE5D,MAAM,gBACN+D,KAAMhE,EACN8D,KAAK,gBACL5D,MAAOY,EAAKjB,cACZkE,SAAU7C,UAIhB,mBACA,UAAC,IAAD,CAAOmC,UAAU,MAAMC,QAAS,EAAG+B,eAAe,SAAlD,WACE,SAAC,oBAAD,CACE5B,MAAM,SACNF,QAAQ,mBACRhB,KAAK,QACLoC,KAAMC,EAAAA,EAAAA,KACNlB,QAAS,kBAAMP,SAEjB,SAAC,oBAAD,CACEM,MAAM,UACNF,QAAQ,iBACRhB,KAAK,QACLoC,KAAMC,EAAAA,EAAAA,KACNlB,QAAS,kBAAMjB,mB,iVC7OrB9C,EAAc,GAEL,SAAS2F,IACtB,IAAMC,EAAW,CACfC,WAAY,UACZC,OAAQ,wBACRC,QAAS,WACTC,aAAc,MACdC,OAAQ,QAGJxF,GAAYC,EAAAA,EAAAA,KACZmB,GAAWC,EAAAA,EAAAA,MACjB,GAA8BnB,EAAAA,EAAAA,UAAS,IAAvC,eAAOuF,EAAP,KAAgBC,EAAhB,KACA,GAAoCxF,EAAAA,EAAAA,UAAS,IAA7C,eAAOyF,EAAP,KAAmBC,EAAnB,KAEA,GAA4B1F,EAAAA,EAAAA,UAAS,IAArC,eAAO2F,EAAP,KAAeC,EAAf,KACA,GAAwC5F,EAAAA,EAAAA,UAAS,MAAjD,eAAO6F,EAAP,KAAqBC,EAArB,KACA,GAAwBvF,EAAAA,EAAAA,GAAkBlB,GAAnCmB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QACLsF,GAAOC,EAAAA,EAAAA,MAAPD,GAIFE,GAAaC,EAAAA,EAAAA,cACjB,WAAiC,IAAhChH,EAA+B,uDAAjB,GAAIC,EAAa,uDAAN,EACxBW,GAAU,IACVuB,EAAAA,EAAAA,GAAgB,CACdvC,KAAMwC,EAAAA,GAAAA,cAAAA,KAAAA,MACNC,KAAM,GACNC,UAAWC,EAAAA,GACXtB,YAAY,EACZjB,YAAAA,EACAC,KAAAA,EACAuC,QAAS,SAACC,GACR7B,GAAU,GACV0F,EAAW7D,EAAKnB,OAElBoB,MAAO,SAACC,GACN/B,GAAU,IACVgC,EAAAA,EAAAA,GAAY,CAAEC,QAASF,EAAIG,WAAYC,KAAM,QAASC,IAAK,UAIjE,CAACpC,IAGGqG,EAAgB,SAACJ,GACrBjG,GAAU,IACVuB,EAAAA,EAAAA,GAAgB,CACdvC,KAAMwC,EAAAA,GAAAA,YAAAA,kBAA2CyE,EACjDxE,KAAM,GACNC,UAAWC,EAAAA,GACXC,QAAS,SAACC,GAAU,IAAD,EACbyE,EAAW,UAAGzE,EAAKnB,YAAR,aAAG,EAAW6F,yBAC7BX,EAAcU,GACdtG,GAAU,IAEZ8B,MAAO,SAACC,GACN/B,GAAU,IACVgC,EAAAA,EAAAA,GAAY,CAAEC,QAASF,EAAIG,WAAYC,KAAM,QAASC,IAAK,SA0B3DoE,GAAYJ,EAAAA,EAAAA,cAAY,WAC5BpG,GAAU,IACVuB,EAAAA,EAAAA,GAAgB,CACdvC,KAAK,GAAD,OAAKyH,EAAAA,GAAL,YAAgCR,GACpCxE,KAAM,GACNC,UAAWgF,EAAAA,EACX9E,QAAS,SAACC,GACRiE,EAAUjE,EAAKnB,MACfV,GAAU,IAEZ8B,MAAO,SAACC,GACN/B,GAAU,IACVgC,EAAAA,EAAAA,GAAY,CAAEC,QAASF,EAAIG,WAAYC,KAAM,QAASC,IAAK,UAG9D,CAAC6D,IAEEU,GAAgB,SAACC,GACrB,OAAOA,EAAIC,UAAU,OAAOC,QAAQ,mBAAoB,KA4CpDC,GAAoB,SAAC7C,GAAD,SACxBxD,EAAKiG,GAAczC,EAAGS,OAASjE,EAAKiG,GAAczC,EAAGS,MAAMX,OAAS,IAIhEgD,GAAuB,SAAC9C,GAAD,QAC3BxD,EAAKiG,GAAcZ,EAAapB,SAC5BjE,EAAKiG,GAAcZ,EAAapB,MAAMsC,SAAS/C,EAAGS,MA+CxD,OAbA3B,EAAAA,EAAAA,YAAU,WACRwD,IACAL,MACC,CAACA,EAAYK,KAEhBxD,EAAAA,EAAAA,YAAU,WACR+C,GAAgBM,EAAcN,EAAapB,OAC1C,CAACoB,KAEJ/C,EAAAA,EAAAA,YAAU,WACR6C,EAAOlB,KAvIkB,SAACsB,GAC1BjG,GAAU,IACVuB,EAAAA,EAAAA,GAAgB,CACdvC,KAAK,GAAD,OAAKkI,EAAAA,GAAL,YAA6CjB,GACjDxE,KAAM,GACNC,UAAWyF,EAAAA,EACXvF,QAAS,SAACC,GAAU,IAAD,EACbuF,EAAW,GACf,UAAAvF,EAAKnB,YAAL,SAAW2G,SAAQ,SAAAnD,GACjB,IAAIoD,EAAgBC,MAAMC,KAAKtD,EAAGqC,0BAA0B,SAAArC,GAAE,OAAIA,EAAGS,OACrEyC,EAASlD,EAAGuD,sBAAsB9C,KAAO2C,KAE3C3G,EAAQyG,GACRpH,GAAU,IAEZ8B,MAAO,SAACC,GACN/B,GAAU,IACVgC,EAAAA,EAAAA,GAAY,CAAEC,QAASF,EAAIG,WAAYC,KAAM,QAASC,IAAK,QAsHjDsF,CAAmB7B,EAAOlB,OACvC,CAACkB,KAGF,UAAC,IAAD,YACE,SAAC,IAAD,CAAO5C,UAAU,MAAMC,QAAS,EAAhC,UACE,SAAC,UAAD,CAAgBC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,gBAEpD,mBACA,UAAC,IAAD,CAAOJ,UAAU,MAAMC,QAAS,EAAGyE,WAAW,SAA9C,WACE,SAAC,kBAAD,CAAwBxE,QAAQ,QAAhC,+BAIA,SAAC,IAAD,CAAKyE,GAAIzC,EAAT,UACE,SAAC,kBAAD,CAAwBhC,QAAQ,QAAhC,SACG0C,EAAOrG,sBAId,mBACA,UAAC,KAAD,CAAM+D,WAAS,EAACL,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMM,MAAI,EAACC,GAAI,GAAIoE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAK,EAArD,UACE,SAAC,oBAAD,WACE,SAAC,IAAD,CAAOlE,cAAY,EAAC,aAAW,eAA/B,UACE,SAAC,IAAD,UACG0B,EAAQzB,OAAS,EAChByB,EAAQxB,KAAI,SAACC,EAAIC,GAAL,OACV,UAAC,IAAD,CACEE,KAAK,WACLC,UAAW,EACX4D,UAAWnC,GAAgBA,EAAapB,MAAQT,EAAGS,IAAM,sBAAwB,GAHnF,WAKE,UAAC,IAAD,YACE,SAAC,IAAD,CACEwD,SACE,SAAC,IAAD,CACEC,MAAM,UACNC,QAAStB,GAAkB7C,GAC3BP,SAAU,SAAC2E,GAAD,OAnIR,SAACA,EAAGpE,GAChC,IAAK6B,EAAc,OAAOwC,MAAM,kCAChC,GAAIxC,EAAapB,MAAQT,EAAGS,IAAK,OAAO4D,MAAM,wCAE9C,IAAMF,EAAYC,EAAEE,OAAdH,QACFI,EAAW9B,GAAczC,EAAGS,KAGhC,GAFA0B,EAAcN,EAAapB,KAEvB0D,EAAS,CACX,IAAIK,EAAkBnB,MAAMC,KAAK7B,GAAY,SAAAzB,GAAE,OAAIA,EAAGS,OACtDhE,GAAQ,kBAAKD,GAAN,cAAa+H,EAAWC,UAE/B/H,GAAQ,kBAAKD,GAAN,cAAa+H,EAAW,MAuHUE,CAAsBL,EAAGpE,QAI/CA,EAAG0E,gBAEN,SAAC,IAAD,WACE,SAAC,wBAAD,CACEvF,MAAM,iBACNkB,KAAMC,EAAAA,EAAAA,YACNlB,QAAS,kBAAM0C,EAAgB9B,UAnBhBC,OAyBvB,SAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACE,SAAC,IAAD,CAAWM,QAAS,EAAGC,MAAM,SAA7B,oEAUZ,SAAC,KAAD,CAAMrB,MAAI,EAACC,GAAI,GAAIoE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAK,EAAGhD,eAAe,SAAS0C,WAAW,SAA3F,SACGjH,GAAQqF,GACP,SAAC,oBAAD,WACE,SAAC,IAAD,CAAOhC,cAAY,EAAC,aAAW,eAA/B,UACE,SAAC,IAAD,UACG4B,EAAW3B,OAAS,EACnB2B,EAAW1B,KAAI,SAACC,EAAIC,GAAL,OACb,SAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACE,UAAC,IAAD,YACE,SAAC,IAAD,CACE6D,SACE,SAAC,IAAD,CACE,aAAW,gBACXC,MAAM,UACNC,QAASrB,GAAqB9C,GAC9BP,SAAU,SAAC2E,GAAD,OA7JP,SAACA,EAAGpE,GACnC,IAAMmE,EAAYC,EAAEE,OAAdH,QACFQ,EAAcnI,EAAKiG,GAAcZ,EAAapB,MAC9C8D,EAAW9B,GAAcZ,EAAapB,KAE1C,GAAI0D,EAAS,CACX,IAAIS,EAAiBpI,EAAK+H,IAAa,GAEvC,OAAO9H,GAAQ,kBACVD,GADS,cAEX+H,EAFW,kBAGPK,GAHO,CAIV5E,EAAGS,SAIP,IAAIoE,EAAaF,EAAYG,QAAO,SAAApF,GAAI,OAAIA,IAASM,EAAGS,OAExD,OAAOhE,GAAQ,kBACVD,GADS,cAEX+H,EAAWM,KAyI6BE,CAAyBX,EAAGpE,QAIlDA,EAAGgF,mBAZ2C/E,OAiBrD,SAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACE,SAAC,IAAD,CAAWM,QAAS,EAAGC,MAAM,SAA7B,kEASV,SAAC,IAAD,CACE+C,IAAE,QACAuB,QAAS,OACTlE,eAAgB,SAChB0C,WAAY,UACTxC,GALP,UAQE,SAAC,kBAAD,CAAwBhC,QAAQ,QAAhC,4DAKR,mBACA,UAAC,IAAD,CAAOF,UAAU,MAAMC,QAAS,EAAG+B,eAAe,SAAlD,WACE,SAAC,oBAAD,CACE5B,MAAM,SACNF,QAAQ,mBACRhB,KAAK,QACLoC,KAAMC,EAAAA,EAAAA,KACNlB,QAAS,kBAAMlC,EAASsD,EAAAA,EAAAA,oBAE1B,SAAC,oBAAD,CACErB,MAAM,UACNF,QAAQ,iBACRhB,KAAK,QACLoC,KAAMC,EAAAA,EAAAA,KACNlB,QAtKe,WACrB,IAAI8F,EAAU,GACd,IAAK,IAAItJ,KAASY,EAChB,GAAKA,EAAKZ,IAAiC,IAAvBY,EAAKZ,GAAOkE,OAAhC,CACA,IAAIqF,EAAM,CACRC,sBAAuBzD,EAAOlB,IAC9B4B,yBAA0B7F,EAAKZ,GAC/B2H,sBAAuB3H,GAEzBsJ,EAAQG,KAAKF,GAGfrJ,GAAU,IACVuB,EAAAA,EAAAA,GAAgB,CACdvC,KAAMwK,EAAAA,GACN/H,KAAM,CAAEgI,eAAgBL,EAASM,UAAW7D,EAAOlB,KACnDjD,UAAWiI,EAAAA,EACX/H,QAAS,SAACC,GACR7B,GAAU,IACVgC,EAAAA,EAAAA,GAAY,CAAEC,QAASJ,EAAKK,WAAYC,KAAM,UAAWC,IAAK,KAC9DhB,EAASsD,EAAAA,EAAAA,iBAEX5C,MAAO,SAACC,GACN/B,GAAU,IACVgC,EAAAA,EAAAA,GAAY,CAAEC,QAASF,EAAIG,WAAYC,KAAM,QAASC,IAAK","sources":["modules/administrador/perfiles/PerfilesRoutes.js","modules/administrador/perfiles/admin/PerfilesAdminPage.js","modules/administrador/perfiles/detail/PerfilesDetailPage.js"],"sourcesContent":["import React, { memo } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport PerfilesAdminPage from './admin/PerfilesAdminPage';\r\nimport PerfilesDetailPage from './detail/PerfilesDetailPage';\r\n\r\nconst PerfilesRoutes = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/admin\" element={<PerfilesAdminPage />} />\r\n      <Route path=\"/:id\" element={<PerfilesDetailPage />} />\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default memo(PerfilesRoutes)","import { Box, Grid, Stack, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Controls from '../../../../framework/components/Controls';\r\nimport { ICON } from '../../../../framework/components/icons/Icon';\r\nimport { SaveRequestData } from '../../../../helpers/helpRequestBackend';\r\nimport { useFormValidation } from '../../../../hooks/useFormValidation';\r\nimport { pathServer } from '../../../../config/router/path';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useForm } from '../../../../hooks/useForm';\r\nimport ButtonsSearchComponent from '../../../../components/utilComponents/ButtonsSearchComponent';\r\nimport { SERVICES_POST } from '../../../../services/services.axios';\r\nimport { MessageUtil } from '../../../../util/MessageUtil';\r\nimport useLoaderContext from '../../../../hooks/useLoaderContext';\r\nimport ValidateData from '../../../../hooks/useValidateData';\r\nimport { pathFront } from '../../../../config/router/pathFront';\r\n\r\nconst paginate = {\r\n  rowsPerPage: 10,\r\n  page: 0,\r\n  count: 0\r\n}\r\n\r\nconst dataInitial = {\r\n  NOMBRE_PERFIL: \"\",\r\n  IS_MANAGEABLE: true,\r\n  ESTADO: true\r\n}\r\n\r\nconst dataFormInitial = {\r\n  NOMBRE_PERFIL: null,\r\n  ESTADO: true\r\n}\r\n\r\nconst estadoList = [\r\n  { label: \"Activo\", value: true },\r\n  { label: \"Inactivo\", value: false }\r\n]\r\n\r\nexport default function PerfilesAdminPage () {\r\n  const validate = (fieldValues = data) =>  {\r\n    let temp = {...errors};\r\n    \r\n    if (\"NOMBRE_PERFIL\" in fieldValues) {\r\n      temp.NOMBRE_PERFIL = !fieldValues.NOMBRE_PERFIL ? \"El campo Nombre de Perfil es requerido\" : \"\";\r\n    } \r\n    \r\n    setErrors({...temp});\r\n    console.log(temp, Object.values(temp).every((x) => x === ''))\r\n    if (fieldValues === data) {\r\n      return Object.values(temp).every((x) => x === '');\r\n    }\r\n  }\r\n\r\n  const setLoader = useLoaderContext();\r\n  const [perfiles, setPerfiles] = useState([]);\r\n  const [pagination, setPagination] = useState(paginate);  \r\n  const [open, setOpen] = useState(false);\r\n  const {data, setData, errors, setErrors, handleInputFormChange, resetForm} = useFormValidation(dataInitial, true)\r\n  const [dataForm, handleInputChange, resetData] = useForm(dataFormInitial);\r\n  const navigate = useNavigate();\r\n\r\n  const getPerfiles = (rowsPerPage = 10, page = 1) => {\r\n    setLoader(true)\r\n    SaveRequestData({\r\n      path: pathServer.SEGURIDAD.PERFILES.INDEX,\r\n      body: dataForm,\r\n      fnRequest: SERVICES_POST,\r\n      pagination: true,\r\n      rowsPerPage,\r\n      page,\r\n      success: (resp) => {\r\n        let { rowsPerPage, count, page } = resp;\r\n        --page;\r\n        setPagination({ rowsPerPage, count, page });\r\n        setPerfiles(resp.data)\r\n        setLoader(false)\r\n      },\r\n      error: (err) => {\r\n        setLoader(false)\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 })\r\n      }\r\n    })\r\n  }\r\n\r\n  const savePerfil = () => {\r\n    if (validate()) {\r\n      setLoader(true)\r\n      SaveRequestData({\r\n        path: pathServer.SEGURIDAD.PERFILES.NEW,\r\n        body: data,\r\n        fnRequest: SERVICES_POST,\r\n        success: (resp) => {\r\n          getPerfiles()\r\n          setOpen(false)\r\n          resetForm()\r\n          setLoader(false)\r\n          MessageUtil({ message: resp.statusText, type: \"success\", seg: 10 })\r\n        },\r\n        error: (err) => {\r\n          resetForm()\r\n          setOpen(false)\r\n          setLoader(false)\r\n          MessageUtil({ message: err.statusText, type: \"error\", seg: 10 })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setOpen(false)\r\n    resetData()\r\n  }\r\n\r\n  const updatePerfil = (el) => {\r\n    setOpen(true)\r\n    setData(el)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPerfiles()\r\n  }, [])\r\n\r\n  return(\r\n    <Box>\r\n      <Stack direction=\"row\" spacing={3}>\r\n        <Controls.Title variant=\"h1\" component=\"h1\" title=\"Perfiles\" />\r\n\r\n        <Controls.ButtonComponent\r\n          variant=\"primary-small\"\r\n          type=\"admin\"\r\n          title=\"Nuevo Perfil\"\r\n          onClick={() => setOpen(true)}\r\n        />\r\n      </Stack>\r\n\r\n      <br />\r\n      \r\n      <Box>\r\n        <Controls.TextComponent variant=\"h3\" component=\"div\">Filtros de Búsqueda</Controls.TextComponent>\r\n        <br />\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={3}>\r\n            <Controls.InputComponent label=\"Nombre\" name=\"NOMBRE_PERFIL\" value={dataForm.NOMBRE_PERFIL} onChange={handleInputChange} />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Controls.SelectComponent label=\"Estado\" name=\"ESTADO\" list={estadoList} value={dataForm.ESTADO} onChange={handleInputChange} />\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <ButtonsSearchComponent\r\n          resetForm={() => resetData()}\r\n          filterForm={() => getPerfiles()}\r\n        />\r\n      </Box>\r\n\r\n      <br />\r\n\r\n      <Controls.TableComponents \r\n        pagination={pagination} \r\n        setPagination={setPagination} \r\n        fnPagination={getPerfiles}\r\n      >\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Nombre</TableCell>\r\n              <TableCell>Administrable</TableCell>\r\n              <TableCell>Operación</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {perfiles.length > 0 ? (\r\n              perfiles.map((el, index) => (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                  <TableCell>{el.NOMBRE_PERFIL}</TableCell>\r\n                  <TableCell>{el.IS_MANAGEABLE ? \"Administrable\" : \"No Administrable\"}</TableCell>\r\n                  <TableCell>\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <Controls.ButtonIconComponent\r\n                        title=\"Editar\"\r\n                        icon={ICON.EDIT}\r\n                        onClick={() => updatePerfil(el)}\r\n                      />\r\n\r\n                      <Controls.ButtonIconComponent\r\n                        title=\"Eliminar\"\r\n                        icon={ICON.DELETE}\r\n                      />\r\n\r\n                      <Controls.ButtonComponent\r\n                        title={\"CONFIGURAR\"}\r\n                        variant=\"secondary-small\"\r\n                        type=\"admin\"\r\n                        onClick={() => navigate(pathFront.PERFILES_CONFIG + el._id)}\r\n                      />\r\n                    </Stack>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n                <TableCell colSpan={5} align=\"center\">\r\n                  Todavía no se insertó ningun registro\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </Controls.TableComponents>\r\n\r\n      <Controls.Modal\r\n        open={open}\r\n        setOpen={closeModal}\r\n        minWidth={600}\r\n        fullWidth={true}\r\n        maxWidth=\"sm\"\r\n        title=\"Nuevo Perfil\"\r\n      >\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Controls.InputComponent\r\n              label=\"Nombre de la Sub Página\"\r\n              name=\"NOMBRE_PERFIL\"\r\n              onChange={handleInputFormChange}\r\n              value={data.NOMBRE_PERFIL}\r\n              error={errors.NOMBRE_PERFIL}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Controls.SelectComponent\r\n              label=\"Estado\"\r\n              list={estadoList}\r\n              name=\"ESTADO\"\r\n              value={data.ESTADO}\r\n              onChange={handleInputFormChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Controls.SelectComponent\r\n              label=\"Administrable\"\r\n              list={estadoList}\r\n              name=\"IS_MANAGEABLE\"\r\n              value={data.IS_MANAGEABLE}\r\n              onChange={handleInputFormChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <Stack direction=\"row\" spacing={3} justifyContent=\"center\">\r\n          <Controls.ButtonComponent\r\n            title=\"VOLVER\"\r\n            variant=\"secondary-normal\"\r\n            type=\"admin\"\r\n            icon={ICON.BACK}\r\n            onClick={() => closeModal()}\r\n          />\r\n          <Controls.ButtonComponent\r\n            title=\"Guardar\"\r\n            variant=\"primary-normal\"\r\n            type=\"admin\"\r\n            icon={ICON.SAVE}\r\n            onClick={() => savePerfil()}\r\n          />\r\n        </Stack>\r\n      </Controls.Modal>\r\n    </Box>\r\n  )\r\n}","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport Controls from \"../../../../framework/components/Controls\";\r\nimport { ICON } from \"../../../../framework/components/icons/Icon\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport useLoaderContext from \"../../../../hooks/useLoaderContext\";\r\nimport { SaveRequestData } from \"../../../../helpers/helpRequestBackend\";\r\nimport { pathServer, SEGURIDAD_PERFILES_MENU_SUBMENU_SHOW, SEGURIDAD_PERFILES_MENU_SUBMENU_STORE, SEGURIDAD_PERFILES_SHOW } from \"../../../../config/router/path\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport { SEGURIDAD_PERFILES_SHOW_AXIOS } from \"../../../../services/seguridad_perfiles.axios\";\r\nimport { useFormValidation } from \"../../../../hooks/useFormValidation\"\r\nimport { SEGURIDAD_PERFILES_MENU_SUBMENU_SHOW_AXIOS, SEGURIDAD_PERFILES_MENU_SUBMENU_STORE_AXIOS } from \"../../../../services/seguridad_perfiles_menu_submenu.axios\";\r\nimport { SERVICES_POST } from \"../../../../services/services.axios\";\r\nimport { MessageUtil } from \"../../../../util/MessageUtil\";\r\nimport { pathFront } from \"../../../../config/router/pathFront\";\r\n\r\nconst dataInitial = {}\r\n\r\nexport default function PerfilesDetailPage() {\r\n  const styleBox = {\r\n    background: \"#F6F6F6\",\r\n    border: \"1px solid var(--text)\",\r\n    padding: \"5px 15px\",\r\n    borderRadius: \"5px\",\r\n    height: \"100%\",\r\n  };\r\n\r\n  const setLoader = useLoaderContext();\r\n  const navigate = useNavigate();\r\n  const [paginas, setPaginas] = useState([]);\r\n  const [subpaginas, setSubpaginas] = useState([]);\r\n\r\n  const [perfil, setPerfil] = useState({})\r\n  const [paginaSelect, setPaginaSelect] = useState(null);\r\n  const {data, setData} = useFormValidation(dataInitial)\r\n  const { id } = useParams()\r\n\r\n  // ### PETICIONES\r\n\r\n  const getPaginas = useCallback(\r\n    (rowsPerPage = 10, page = 1) => {\r\n      setLoader(true);\r\n      SaveRequestData({\r\n        path: pathServer.CONFIGURACION.MENU.INDEX,\r\n        body: {},\r\n        fnRequest: SERVICES_POST,\r\n        pagination: true,\r\n        rowsPerPage,\r\n        page,\r\n        success: (resp) => {\r\n          setLoader(false);\r\n          setPaginas(resp.data);\r\n        },\r\n        error: (err) => {\r\n          setLoader(false);\r\n          MessageUtil({ message: err.statusText, type: 'error', seg: 10})\r\n        },\r\n      });\r\n    },\r\n    [setLoader]\r\n  );\r\n\r\n  const getSubpaginas = (id) => {\r\n    setLoader(true);\r\n    SaveRequestData({\r\n      path: pathServer.CONFIG_MENU.SEARCH_SUBPAGINAS + id,\r\n      body: {},\r\n      fnRequest: SERVICES_POST,\r\n      success: (resp) => {\r\n        let arrSubmenus = resp.data?.ID_CONFIGURACION_SUBMENU;\r\n        setSubpaginas(arrSubmenus)\r\n        setLoader(false);\r\n      },\r\n      error: (err) => {\r\n        setLoader(false);\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n      },\r\n    });\r\n  };\r\n  const getPaginasByPerfil = (id) => {\r\n    setLoader(true)\r\n    SaveRequestData({\r\n      path: `${SEGURIDAD_PERFILES_MENU_SUBMENU_SHOW}/${id}`,\r\n      body: {},\r\n      fnRequest: SEGURIDAD_PERFILES_MENU_SUBMENU_SHOW_AXIOS,\r\n      success: (resp) => {\r\n        let dataPage = {};\r\n        resp.data?.forEach(el => {\r\n          let arrIdSubmenus = Array.from(el.ID_CONFIGURACION_SUBMENU, el => el._id)\r\n          dataPage[el.ID_CONFIGURACION_MENU._id] = arrIdSubmenus\r\n        })\r\n        setData(dataPage)\r\n        setLoader(false)\r\n      },\r\n      error: (err) => {\r\n        setLoader(false)\r\n        MessageUtil({ message: err.statusText, type: 'error', seg: 10 })\r\n      }\r\n    })\r\n  }\r\n\r\n  const getPerfil = useCallback(() => {\r\n    setLoader(true)\r\n    SaveRequestData({\r\n      path: `${SEGURIDAD_PERFILES_SHOW}/${id}`,\r\n      body: {},\r\n      fnRequest: SEGURIDAD_PERFILES_SHOW_AXIOS,\r\n      success: (resp) => {\r\n        setPerfil(resp.data)\r\n        setLoader(false)\r\n      },\r\n      error: (err) => {\r\n        setLoader(false)\r\n        MessageUtil({ message: err.statusText, type: 'error', seg: 10 })\r\n      },\r\n    });\r\n  }, [id])\r\n\r\n  const removeAccents = (str) => {\r\n    return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n  } \r\n\r\n  const handleFormCheckedMenu = (e, el) => {\r\n    if (!paginaSelect) return alert(\"No ha selecionado la página\")\r\n    if (paginaSelect._id !== el._id) return alert(\"Selecciona la pagina para actualizar\")\r\n\r\n    let { checked } = e.target\r\n    let propData = removeAccents(el._id)\r\n    getSubpaginas(paginaSelect._id)\r\n  \r\n    if (checked) {\r\n      let arrIdSubpaginas = Array.from(subpaginas, el => el._id);\r\n      setData({ ...data, [propData]: arrIdSubpaginas })\r\n    } else {\r\n      setData({ ...data, [propData]: [] })\r\n    }\r\n  }\r\n\r\n  const handleFormCheckedSubmenu = (e, el) => {\r\n    let { checked } = e.target;\r\n    let listChecked = data[removeAccents(paginaSelect._id)];\r\n    let propData = removeAccents(paginaSelect._id)\r\n\r\n    if (checked) {\r\n      let arrDataChecked = data[propData] || [];\r\n\r\n      return setData({\r\n        ...data,\r\n        [propData]: [\r\n          ...arrDataChecked,\r\n          el._id\r\n        ]\r\n      })\r\n    } else {\r\n      let arrChecked = listChecked.filter(list => list !== el._id)\r\n\r\n      return setData({\r\n        ...data,\r\n        [propData]: arrChecked\r\n      })\r\n    }\r\n  }\r\n\r\n  const returnCheckedMenu = (el) => \r\n    data[removeAccents(el._id)] && data[removeAccents(el._id)].length > 0 \r\n      ? true\r\n      : false\r\n      \r\n  const returnCheckedSubmenu = (el) => \r\n    data[removeAccents(paginaSelect._id)] \r\n      ? data[removeAccents(paginaSelect._id)].includes(el._id) \r\n        ? true \r\n        : false \r\n      : false\r\n\r\n  const guardarPaginas = () => {\r\n    let arrData = [];\r\n    for (let value in data) {\r\n      if (!data[value] || data[value].length === 0) continue;\r\n      let arr = {\r\n        ID_SEGURIDAD_PERFILES: perfil._id,\r\n        ID_CONFIGURACION_SUBMENU: data[value],\r\n        ID_CONFIGURACION_MENU: value,\r\n      }\r\n      arrData.push(arr)\r\n    }\r\n\r\n    setLoader(true)\r\n    SaveRequestData({\r\n      path: SEGURIDAD_PERFILES_MENU_SUBMENU_STORE,\r\n      body: { PAGINAS_PERFIL: arrData, ID_PERFIL: perfil._id },\r\n      fnRequest: SEGURIDAD_PERFILES_MENU_SUBMENU_STORE_AXIOS,\r\n      success: (resp) => {\r\n        setLoader(false)\r\n        MessageUtil({ message: resp.statusText, type: 'success', seg: 10 })\r\n        navigate(pathFront.PERFILES_ADMIN)\r\n      },\r\n      error: (err) => {\r\n        setLoader(false)\r\n        MessageUtil({ message: err.statusText, type: 'error', seg: 10 })\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPerfil()\r\n    getPaginas();\r\n  }, [getPaginas, getPerfil]);\r\n\r\n  useEffect(() => {\r\n    paginaSelect && getSubpaginas(paginaSelect._id);\r\n  }, [paginaSelect]);\r\n\r\n  useEffect(() => {\r\n    perfil._id && getPaginasByPerfil(perfil._id);\r\n  }, [perfil]);\r\n\r\n  return (\r\n    <Box>\r\n      <Stack direction=\"row\" spacing={3}>\r\n        <Controls.Title variant=\"h1\" component=\"h1\" title=\"Perfiles\" />\r\n      </Stack>\r\n      <br />\r\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n        <Controls.TextComponent variant=\"text1\">\r\n          Nombre de Perfil\r\n        </Controls.TextComponent>\r\n\r\n        <Box sx={styleBox}>\r\n          <Controls.TextComponent variant=\"text1\">\r\n            {perfil.NOMBRE_PERFIL}\r\n          </Controls.TextComponent>\r\n        </Box>\r\n      </Stack>\r\n      <br />\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={4} lg={4} xl={4} xxl={4}>\r\n          <Controls.TableComponents>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableBody>\r\n                {paginas.length > 0 ? (\r\n                  paginas.map((el, index) => (\r\n                    <TableRow \r\n                      role=\"checkbox\" \r\n                      tabIndex={-1} key={index}\r\n                      className={paginaSelect && paginaSelect._id === el._id ? \"background-gris_500\" : \"\"}\r\n                    >\r\n                      <TableCell>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              color=\"default\"\r\n                              checked={returnCheckedMenu(el)}\r\n                              onChange={(e) => handleFormCheckedMenu(e, el)}\r\n                            />\r\n                          }\r\n                        />\r\n                        {el.NOMBRE_MENU}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Controls.ButtonIconComponent\r\n                          title=\"Sub Páginas\"\r\n                          icon={ICON.ARROW_RIGHT}\r\n                          onClick={() => setPaginaSelect(el)}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                ) : (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n                    <TableCell colSpan={4} align=\"center\">\r\n                      Todavía no se insertó ningun registro\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </Controls.TableComponents>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={12} md={8} lg={8} xl={8} xxl={8} justifyContent=\"center\" alignItems=\"center\" >\r\n          {data && paginaSelect ? (\r\n            <Controls.TableComponents>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableBody>\r\n                  {subpaginas.length > 0 ? (\r\n                    subpaginas.map((el, index) => (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                        <TableCell>\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                aria-label=\"Checkbox demo\"\r\n                                color=\"default\"\r\n                                checked={returnCheckedSubmenu(el)}\r\n                                onChange={(e) => handleFormCheckedSubmenu(e, el)}\r\n                              />\r\n                            }\r\n                          />\r\n                          {el.NOMBRE_SUBMENU}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  ) : (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n                      <TableCell colSpan={4} align=\"center\">\r\n                        Todavía no se insertó ningun registro\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </Controls.TableComponents>\r\n          ) : (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                ...styleBox,\r\n              }}\r\n            >\r\n              <Controls.TextComponent variant=\"text1\">Selecciona una Página para comenzar</Controls.TextComponent>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      <Stack direction=\"row\" spacing={3} justifyContent=\"center\">\r\n        <Controls.ButtonComponent\r\n          title=\"VOLVER\"\r\n          variant=\"secondary-normal\"\r\n          type=\"admin\"\r\n          icon={ICON.BACK}\r\n          onClick={() => navigate(pathFront.PERFILES_ADMIN)}\r\n        />\r\n        <Controls.ButtonComponent\r\n          title=\"Guardar\"\r\n          variant=\"primary-normal\"\r\n          type=\"admin\"\r\n          icon={ICON.SAVE}\r\n          onClick={guardarPaginas}\r\n        />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["PerfilesRoutes","path","element","memo","paginate","rowsPerPage","page","count","dataInitial","NOMBRE_PERFIL","IS_MANAGEABLE","ESTADO","dataFormInitial","estadoList","label","value","PerfilesAdminPage","setLoader","useLoaderContext","useState","perfiles","setPerfiles","pagination","setPagination","open","setOpen","useFormValidation","data","setData","errors","setErrors","handleInputFormChange","resetForm","useForm","dataForm","handleInputChange","resetData","navigate","useNavigate","getPerfiles","SaveRequestData","pathServer","body","fnRequest","SERVICES_POST","success","resp","error","err","MessageUtil","message","statusText","type","seg","savePerfil","fieldValues","temp","console","log","Object","values","every","x","validate","closeModal","useEffect","direction","spacing","variant","component","title","onClick","container","item","xs","name","onChange","list","filterForm","fnPagination","stickyHeader","length","map","el","index","hover","role","tabIndex","icon","ICON","updatePerfil","pathFront","_id","colSpan","align","minWidth","fullWidth","maxWidth","justifyContent","PerfilesDetailPage","styleBox","background","border","padding","borderRadius","height","paginas","setPaginas","subpaginas","setSubpaginas","perfil","setPerfil","paginaSelect","setPaginaSelect","id","useParams","getPaginas","useCallback","getSubpaginas","arrSubmenus","ID_CONFIGURACION_SUBMENU","getPerfil","SEGURIDAD_PERFILES_SHOW","SEGURIDAD_PERFILES_SHOW_AXIOS","removeAccents","str","normalize","replace","returnCheckedMenu","returnCheckedSubmenu","includes","SEGURIDAD_PERFILES_MENU_SUBMENU_SHOW","SEGURIDAD_PERFILES_MENU_SUBMENU_SHOW_AXIOS","dataPage","forEach","arrIdSubmenus","Array","from","ID_CONFIGURACION_MENU","getPaginasByPerfil","alignItems","sx","sm","md","lg","xl","xxl","className","control","color","checked","e","alert","target","propData","arrIdSubpaginas","handleFormCheckedMenu","NOMBRE_MENU","listChecked","arrDataChecked","arrChecked","filter","handleFormCheckedSubmenu","NOMBRE_SUBMENU","display","arrData","arr","ID_SEGURIDAD_PERFILES","push","SEGURIDAD_PERFILES_MENU_SUBMENU_STORE","PAGINAS_PERFIL","ID_PERFIL","SEGURIDAD_PERFILES_MENU_SUBMENU_STORE_AXIOS"],"sourceRoot":""}