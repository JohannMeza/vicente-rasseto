{"version":3,"file":"static/js/639.f336893b.chunk.js","mappings":"yRASe,SAASA,IACtB,MAA0BC,EAAAA,SAAe,GAAzC,eAAOC,EAAP,KAAcC,EAAd,KAGA,OACE,UAAC,IAAD,YACE,UAAC,IAAD,CACED,MAAOA,EACPE,SANe,SAACC,EAAOC,GAAR,OAAqBH,EAASG,IAO7C,aAAW,qBAHb,WAKE,SAAC,IAAD,CACEC,MAAM,gBACNC,GAAG,eACH,gBAAc,uBAEhB,SAAC,IAAD,CACED,MAAM,SACNC,GAAG,eACH,gBAAc,uBAEhB,SAAC,IAAD,CACED,MAAM,mBACNC,GAAG,eACH,gBAAc,0BAGlB,mBACA,SAAC,aAAD,CAAmBN,MAAOA,EAAOO,MAAO,EAAxC,UACE,SAAC,UAAD,OAEF,SAAC,aAAD,CAAmBP,MAAOA,EAAOO,MAAO,EAAxC,UACE,SAAC,UAAD,OAEF,SAAC,aAAD,CAAmBP,MAAOA,EAAOO,MAAO,EAAxC,UACE,SAAC,UAAD,W,6LCvCO,SAASC,IACtB,OACE,UAAC,IAAD,YACE,UAAC,IAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,UAAD,CAAgBC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,sBAElD,SAAC,oBAAD,CACEF,QAAQ,gBACRG,KAAK,QACLD,MAAM,oBAGV,mBACA,UAAC,IAAD,YACE,SAAC,kBAAD,CAAwBF,QAAQ,KAAKC,UAAU,MAA/C,qCACA,mBACA,UAAC,KAAD,CAAMG,WAAS,EAACL,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,mBAAD,CAAyBZ,MAAM,cAEjC,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,mBAAD,CAAyBZ,MAAM,aAEjC,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,mBAAD,CAAyBZ,MAAM,iBAEjC,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,mBAAD,CAAyBZ,MAAM,gBAEjC,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,mBAAD,CAAyBZ,MAAM,iBAGnC,mBACA,UAAC,IAAD,CAAOI,UAAU,MAAMC,QAAS,EAAGQ,eAAe,SAAlD,WACE,SAAC,oBAAD,CACEL,MAAM,UACNF,QAAQ,kBACRG,KAAK,QACLK,KAAMC,EAAAA,EAAAA,QAGR,SAAC,oBAAD,CACEP,MAAO,UACPF,QAAQ,gBACRG,KAAK,QACLK,KAAMC,EAAAA,EAAAA,cAIZ,mBACA,SAAC,oBAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,sBACA,SAAC,IAAD,wBACA,SAAC,IAAD,yBACA,SAAC,IAAD,wBACA,SAAC,IAAD,iCAGJ,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,oBACA,SAAC,IAAD,oBACA,SAAC,IAAD,oBACA,SAAC,IAAD,oBACA,SAAC,IAAD,WACE,UAAC,IAAD,CAAOX,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,wBAAD,CACEG,MAAM,SACNM,KAAMC,EAAAA,EAAAA,QAGR,SAAC,wBAAD,CACEP,MAAM,WACNM,KAAMC,EAAAA,EAAAA,6B,gSC5DpBC,EAAoB,CACxBC,OAAQ,GACRC,QAAQ,GAGJC,EAAW,CACfC,YAAa,GACbC,KAAM,EACNC,MAAO,GAGHC,EAAa,CACjB,CAAEvB,MAAO,SAAUL,OAAO,GAC1B,CAAEK,MAAO,WAAYL,OAAO,IAGf,SAAS6B,IACtB,OAAoDC,EAAAA,EAAAA,GAAQT,GAA5D,eAAOU,EAAP,KAAuCC,GAAvC,WACA,GAAoCC,EAAAA,EAAAA,UAAST,GAA7C,eAAmBU,GAAnB,WACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACMC,GAAYC,EAAAA,EAAAA,KAClB,GAAwBL,EAAAA,EAAAA,WAAS,GAAjC,eAAOM,EAAP,KAAaC,EAAb,KACA,GAAwCP,EAAAA,EAAAA,UAAS,MAAjD,eAAOQ,EAAP,KAAqBC,EAArB,KAEMC,EAAY,WAAiC,IAAhClB,EAA+B,uDAAjB,GAAIC,EAAa,uDAAN,EAC1CW,GAAU,IACVO,EAAAA,EAAAA,GAAgB,CACdC,KAAMC,EAAAA,GAAAA,eAAAA,OAAAA,MACNC,KAAMhB,EACNiB,UAAWC,EAAAA,GACXC,YAAY,EACZzB,YAAAA,EACAC,KAAAA,EACAyB,QAAS,SAACC,GACRf,GAAU,GACVgB,QAAQC,IAAIF,GACZ,IAAM3B,EAA6B2B,EAA7B3B,YAAaE,EAAgByB,EAAhBzB,MAAOD,EAAS0B,EAAT1B,OACxBA,EACFU,EAAUgB,EAAKG,MACfrB,EAAc,CAAET,YAAAA,EAAaE,MAAAA,EAAOD,KAAAA,KAEtC8B,MAAO,SAACC,GACNpB,GAAU,IACVqB,EAAAA,EAAAA,GAAY,CAAEC,QAASF,EAAIG,WAAY9C,KAAM,QAAS+C,IAAK,SAajE,OAJAC,EAAAA,EAAAA,YAAU,WACRnB,MACC,KAGD,UAAC,IAAD,YACE,UAAC,IAAD,CAAOlC,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,UAAD,CAAgBC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,YAElD,SAAC,oBAAD,CACEF,QAAQ,gBACRG,KAAK,QACLD,MAAM,cACNkD,QAAS,kBAAMvB,GAAQ,UAG3B,mBACA,UAAC,IAAD,YACE,SAAC,kBAAD,CAAwB7B,QAAQ,KAAKC,UAAU,MAA/C,qCAGA,mBACA,UAAC,KAAD,CAAMG,WAAS,EAACL,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,mBAAD,CAAyBZ,MAAM,cAEjC,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,mBAAD,CAAyBZ,MAAM,iBAGnC,mBACA,SAAC,IAAD,CAAwB2D,UAAWhC,EAAWiC,WAAYtB,QAE5D,mBACA,SAAC,oBAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,qBACA,SAAC,IAAD,6BACA,SAAC,IAAD,6BAGJ,SAAC,IAAD,WACS,OAANR,QAAM,IAANA,OAAA,EAAAA,EAAQ+B,QAAS,EAChB/B,EAAOgC,KAAI,SAACC,EAAI7D,GACb,IACE,IAAW6D,EAAGC,YACd,IAAWD,EAAGE,cACd,IACC,IACG,wBAEOlD,EAAAA,EAAAA,KAEP,wBAEOA,EAAAA,EAAAA,WAOhB,SAAC,IAAD,WACE,SAAC,IAAD,CAAWmD,QAAS,EAAGC,GAAI,CAAEC,UAAW,UAAxC,iCAOV,SAACC,EAAD,CACEnC,KAAMA,EACNC,QAASA,EACTmC,UA/EY,aAgFZlC,aAAcA,EACdC,gBAAiBA,OAMzB,IAAMgC,EAAc,SAAC,GAAiE,IAA/DnC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,QAASmC,EAA+C,EAA/CA,UAAWlC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBACvDkC,EAAW,WAA0B,IAAzBC,EAAwB,uDAAVtB,EAC1BuB,GAAI,UAAOC,GAWf,GATI,kBAAmBF,IACrBC,EAAKR,cAAiBO,EAAYP,cAA2D,GAA3C,0CAGhD,WAAYO,IACdC,EAAKvD,OAAuC,mBAAvBsD,EAAYtD,OAAuB,+BAAiC,IAG3FyD,GAAU,UAAIF,IACVD,IAAgBtB,EAClB,OAAO0B,OAAOC,OAAOJ,GAAMK,OAAM,SAACC,GAAD,MAAa,KAANA,MAI5C,GAA6EC,EAAAA,EAAAA,GAAkBhE,GAAmB,EAAMuD,GAAjHrB,EAAP,EAAOA,KAAM+B,EAAb,EAAaA,QAASP,EAAtB,EAAsBA,OAAQC,EAA9B,EAA8BA,UAAWO,EAAzC,EAAyCA,sBAAuBvB,EAAhE,EAAgEA,UAC1DwB,EAAa,WACjBxB,IACAxB,GAAQ,GACRE,EAAgB,OAgBlB,OANAoB,EAAAA,EAAAA,YAAU,WACJrB,GACF6C,EAAQ7C,KAET,CAACA,EAAc6C,KAGhB,UAAC,UAAD,CACA/C,KAAMA,EACNC,QAASgD,EACTC,SAAU,IACVC,WAAW,EACXC,SAAS,KACT9E,MAAM,cANN,WAQE,UAAC,KAAD,CAAME,WAAS,EAACL,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,mBAAD,CACEZ,MAAM,QACNuF,KAAK,gBACL1F,SAAUqF,EACV/B,MAAOuB,EAAOT,cACdtE,MAAOuD,EAAKe,mBAGhB,SAAC,KAAD,CAAMtD,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,oBAAD,CACEZ,MAAM,SACNwF,KAAMjE,EACNgE,KAAK,SACL1F,SAAUqF,EACV/B,MAAOuB,EAAOxD,OACdvB,MAAOuD,EAAKhC,eAIlB,mBACA,UAAC,IAAD,CAAOd,UAAU,MAAMC,QAAS,EAAGQ,eAAe,SAAlD,WACE,SAAC,oBAAD,CACEL,MAAM,SACNF,QAAQ,mBACRG,KAAK,QACLK,KAAMC,EAAAA,EAAAA,KACN2C,QAASyB,KAEX,SAAC,oBAAD,CACE3E,MAAM,UACNF,QAAQ,iBACRG,KAAK,QACLK,KAAMC,EAAAA,EAAAA,KACN2C,QAAS,WAxDXa,MACFD,EAAUpB,GACVb,EAAgB,kB,8TCzKhBrB,EAAoB,CACxBiD,cAAe,GACf/C,QAAQ,GAGJC,EAAW,CACfC,YAAa,GACbC,KAAM,EACNC,MAAO,GAGHC,EAAa,CACjB,CAAEvB,MAAO,SAAUL,OAAO,GAC1B,CAAEK,MAAO,WAAYL,OAAO,IAGf,SAAS8F,IACtB,OAAoDhE,EAAAA,EAAAA,GAAQT,GAA5D,eAAOU,EAAP,KAAiBgE,EAAjB,KAAuC/D,EAAvC,KACA,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOQ,EAAP,KAAqBC,EAArB,KACA,GAAwBT,EAAAA,EAAAA,WAAS,GAAjC,eAAOM,EAAP,KAAaC,EAAb,KACA,GAAoCP,EAAAA,EAAAA,UAAST,GAA7C,eAAO0B,EAAP,KAAmBhB,EAAnB,KACA,GAAwCD,EAAAA,EAAAA,UAAS,IAAjD,eAAO+D,EAAP,KAAqBC,EAArB,KACM5D,GAAYC,EAAAA,EAAAA,KACZ4D,GAAWC,EAAAA,EAAAA,MAEXC,EAAkB,WAAiC,IAAhC3E,EAA+B,uDAAjB,GAAIC,EAAa,uDAAN,EAChDW,GAAU,IACVO,EAAAA,EAAAA,GAAgB,CACdC,KAAMC,EAAAA,GAAAA,eAAAA,cAAAA,MACNC,KAAMhB,EACNiB,UAAWC,EAAAA,GACXC,YAAY,EACZzB,YAAAA,EACAC,KAAAA,EACAyB,QAAS,SAACC,GACRf,GAAU,GACV,IAAMZ,EAA6B2B,EAA7B3B,YAAaE,EAAgByB,EAAhBzB,MAAOD,EAAS0B,EAAT1B,OACxBA,EACFuE,EAAgB7C,EAAKG,MACrBrB,EAAc,CAAET,YAAAA,EAAaE,MAAAA,EAAOD,KAAAA,KAEtC8B,MAAO,SAACC,GACNpB,GAAU,IACVqB,EAAAA,EAAAA,GAAY,CAAEC,QAASF,EAAIG,WAAY9C,KAAM,QAAS+C,IAAK,SAgCjE,OAJAC,EAAAA,EAAAA,YAAU,WACRsC,MACC,KAGD,UAAC,IAAD,YACE,UAAC,IAAD,CAAO3F,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,UAAD,CAAgBC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,mBAElD,SAAC,oBAAD,CACEF,QAAQ,gBACRG,KAAK,QACLD,MAAM,QACNkD,QAAS,kBAAMvB,GAAQ,UAG3B,mBACA,UAAC,IAAD,YACE,SAAC,kBAAD,CAAwB7B,QAAQ,KAAKC,UAAU,MAA/C,qCACA,mBACA,UAAC,KAAD,CAAMG,WAAS,EAACL,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,mBAAD,CACEZ,MAAM,gBACNuF,KAAK,gBACL1F,SAAU6F,EACV/F,MAAO+B,EAASuC,mBAGpB,SAAC,KAAD,CAAMtD,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,oBAAD,CACEZ,MAAM,SACNwF,KAAMjE,EACNgE,KAAK,SACL1F,SAAU6F,EACV/F,MAAO+B,EAASR,eAItB,mBACA,SAAC,IAAD,CAAwByC,UAAWhC,EAAWiC,WAAYmC,QAE5D,mBACA,UAAC,oBAAD,CACElD,WAAYA,EACZhB,cAAeA,EACfmE,aAAcD,EAHhB,WAKE,UAAC,IAAD,YACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,6BACA,SAAC,IAAD,sBACA,SAAC,IAAD,6BAGJ,SAAC,IAAD,WACe,OAAZJ,QAAY,IAAZA,OAAA,EAAAA,EAAc9B,QAAS,EACtB8B,EAAa7B,KAAI,SAACC,EAAI7D,GAAL,OACf,UAAC,IAAD,YACE,SAAC,IAAD,UAAY6D,EAAGE,iBACf,SAAC,IAAD,UAAYF,EAAG7C,OAAS,SAAW,cACnC,SAAC,IAAD,WACE,UAAC,IAAD,CAAOd,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,wBAAD,CACEG,MAAM,SACNM,KAAMC,EAAAA,EAAAA,KACN2C,QAAS,kBAvE7BrB,EAuEmD0B,QAtEnD5B,GAAQ,OAwEU,SAAC,oBAAD,CACE7B,QAAQ,kBACRG,KAAK,QACLD,MAAM,aACNkD,QAAS,kBAAMmC,EAASI,EAAAA,EAAAA,OAAAA,iBAdjB/F,OAqBjB,SAAC,IAAD,WACE,SAAC,IAAD,CAAWgE,QAAS,EAAGC,GAAI,CAAEC,UAAW,UAAxC,+BAMR,SAAC8B,EAAD,CACEhE,KAAMA,EACNC,QAASA,EACTgE,iBAjHiB,SAACC,GACxBpE,GAAU,IACVO,EAAAA,EAAAA,GAAgB,CACdC,KAAMC,EAAAA,GAAAA,eAAAA,cAAAA,IACNC,KAAM0D,EACNzD,UAAWC,EAAAA,GACXE,QAAS,SAACC,GACRf,GAAU,GACV+D,KACA1C,EAAAA,EAAAA,GAAY,CAAEC,QAASP,EAAKQ,WAAY9C,KAAM,UAAW+C,IAAK,MAEhEL,MAAO,SAACC,GACNpB,GAAU,IACVqB,EAAAA,EAAAA,GAAY,CAAEC,QAASF,EAAIG,WAAY9C,KAAM,QAAS+C,IAAK,SAqGzDpB,aAAcA,EACdC,gBAAiBA,UAO3B,IAAM6D,EAAwB,SAAC,GAAwE,IAAtEhE,EAAqE,EAArEA,KAAMC,EAA+D,EAA/DA,QAASgE,EAAsD,EAAtDA,iBAAkB/D,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBACxEkC,EAAW,WAA0B,IAAzBC,EAAwB,uDAAVtB,EAC1BuB,GAAI,UAAOC,GAWf,GATI,kBAAmBF,IACrBC,EAAKR,cAAiBO,EAAYP,cAA2D,GAA3C,0CAGhD,WAAYO,IACdC,EAAKvD,OAAuC,mBAAvBsD,EAAYtD,OAAuB,+BAAiC,IAG3FyD,GAAU,UAAIF,IACVD,IAAgBtB,EAClB,OAAO0B,OAAOC,OAAOJ,GAAMK,OAAM,SAACC,GAAD,MAAa,KAANA,MAI5C,GAA6EC,EAAAA,EAAAA,GAAkBhE,GAAmB,EAAMuD,GAAjHrB,EAAP,EAAOA,KAAM+B,EAAb,EAAaA,QAASP,EAAtB,EAAsBA,OAAQC,EAA9B,EAA8BA,UAAWO,EAAzC,EAAyCA,sBAAuBvB,EAAhE,EAAgEA,UAC1DwB,EAAa,WACjBxB,IACAxB,GAAQ,GACRE,EAAgB,OAgBlB,OANAoB,EAAAA,EAAAA,YAAU,WACJrB,GACF6C,EAAQ7C,KAET,CAACA,EAAc6C,KAGhB,UAAC,UAAD,CACA/C,KAAMA,EACNC,QAASgD,EACTC,SAAU,IACVC,WAAW,EACXC,SAAS,KACT9E,MAAM,sBANN,WAQE,UAAC,KAAD,CAAME,WAAS,EAACL,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,mBAAD,CACEZ,MAAM,gBACNuF,KAAK,gBACL1F,SAAUqF,EACV/B,MAAOuB,EAAOT,cACdtE,MAAOuD,EAAKe,mBAGhB,SAAC,KAAD,CAAMtD,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,oBAAD,CACEZ,MAAM,SACNwF,KAAMjE,EACNgE,KAAK,SACL1F,SAAUqF,EACV/B,MAAOuB,EAAOxD,OACdvB,MAAOuD,EAAKhC,eAIlB,mBACA,UAAC,IAAD,CAAOd,UAAU,MAAMC,QAAS,EAAGQ,eAAe,SAAlD,WACE,SAAC,oBAAD,CACEL,MAAM,SACNF,QAAQ,mBACRG,KAAK,QACLK,KAAMC,EAAAA,EAAAA,KACN2C,QAASyB,KAEX,SAAC,oBAAD,CACE3E,MAAM,UACNF,QAAQ,iBACRG,KAAK,QACLK,KAAMC,EAAAA,EAAAA,KACN2C,QAAS,WAxDXa,MACF4B,EAAiBjD,GACjBb,EAAgB","sources":["modules/administrador/grados/admin/GradosAdminPage.js","modules/administrador/grados/detail/ConfiguracionDetail.js","modules/administrador/grados/detail/GradosDetail.js","modules/administrador/grados/detail/NivelEstudioDetail.js"],"sourcesContent":["import { Grid, Stack, Tab, Table, TableBody, TableCell, TableHead, TableRow, Tabs } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport Controls from '../../../../framework/components/Controls';\r\nimport { ICON } from '../../../../framework/components/icons/Icon';\r\nimport ConfiguracionDetail from '../detail/ConfiguracionDetail';\r\nimport GradosDetail from '../detail/GradosDetail';\r\nimport NivelEstudioDetail from '../detail/NivelEstudioDetail';\r\n\r\nexport default function GradosAdminPage () {\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => setValue(newValue);\r\n\r\n  return(\r\n    <Box>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"basic tabs example\"\r\n      >\r\n        <Tab\r\n          label=\"Nivel Estudio\"\r\n          id=\"simple-tab-1\"\r\n          aria-controls=\"simple-tabpanel-1\"\r\n        />\r\n        <Tab\r\n          label=\"Grados\"\r\n          id=\"simple-tab-1\"\r\n          aria-controls=\"simple-tabpanel-1\"\r\n        />\r\n        <Tab\r\n          label=\"Configuración\"\r\n          id=\"simple-tab-1\"\r\n          aria-controls=\"simple-tabpanel-1\"\r\n        />\r\n      </Tabs>\r\n      <br />\r\n      <Controls.TabPanel value={value} index={0}>\r\n        <NivelEstudioDetail />\r\n      </Controls.TabPanel>\r\n      <Controls.TabPanel value={value} index={1}>\r\n        <GradosDetail />\r\n      </Controls.TabPanel>\r\n      <Controls.TabPanel value={value} index={2}>\r\n        <ConfiguracionDetail />\r\n      </Controls.TabPanel>\r\n    </Box>\r\n  )\r\n}\r\n\r\n","import { Box, Grid, Stack, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\r\nimport React from 'react';\r\nimport Controls from '../../../../framework/components/Controls';\r\nimport { ICON } from '../../../../framework/components/icons/Icon';\r\n\r\nexport default function ConfiguracionDetail () {\r\n  return (\r\n    <Box>\r\n      <Stack direction=\"row\" spacing={3}>\r\n        <Controls.Title variant=\"h1\" component=\"h1\" title=\"Configuración\" />\r\n\r\n        <Controls.ButtonComponent\r\n          variant=\"primary-small\"\r\n          type=\"admin\"\r\n          title=\"Nuevo Grado\"\r\n        />\r\n      </Stack>\r\n      <br />\r\n      <Box>\r\n        <Controls.TextComponent variant=\"h3\" component=\"div\">Filtros de Búsqueda</Controls.TextComponent>\r\n        <br />\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={3}>\r\n            <Controls.InputComponent label=\"Nombre\" />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Controls.InputComponent label=\"Autor\" />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Controls.InputComponent label=\"Categoria\" />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Controls.InputComponent label=\"Etiqueta\" />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Controls.InputComponent label=\"Estado\" />\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <Stack direction=\"row\" spacing={3} justifyContent=\"center\">\r\n          <Controls.ButtonComponent\r\n            title=\"LIMPIAR\"\r\n            variant=\"secondary-small\"\r\n            type=\"admin\"\r\n            icon={ICON.BACK}\r\n          />\r\n\r\n          <Controls.ButtonComponent\r\n            title={\"FILTRAR\"}\r\n            variant=\"primary-small\"\r\n            type=\"admin\"\r\n            icon={ICON.SAVE}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n      <br />\r\n      <Controls.TableComponents>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Nombre</TableCell>\r\n              <TableCell>Autor/es</TableCell>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Etiqueta</TableCell>\r\n              <TableCell>Operación</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Hola</TableCell>\r\n              <TableCell>Hola</TableCell>\r\n              <TableCell>Hola</TableCell>\r\n              <TableCell>Hola</TableCell>\r\n              <TableCell>\r\n                <Stack direction=\"row\" spacing={1}>\r\n                  <Controls.ButtonIconComponent\r\n                    title=\"Editar\"\r\n                    icon={ICON.EDIT}\r\n                  />\r\n\r\n                  <Controls.ButtonIconComponent\r\n                    title=\"Eliminar\"\r\n                    icon={ICON.DELETE}\r\n                  />\r\n                </Stack>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </Controls.TableComponents>\r\n    </Box>\r\n  )\r\n}","import {\r\n  Box,\r\n  Grid,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ButtonsSearchComponent from \"../../../../components/utilComponents/ButtonsSearchComponent\";\r\nimport { pathServer } from \"../../../../config/router/path\";\r\nimport Controls from \"../../../../framework/components/Controls\";\r\nimport { ICON } from \"../../../../framework/components/icons/Icon\";\r\nimport { SaveRequestData } from \"../../../../helpers/helpRequestBackend\";\r\nimport { useForm } from \"../../../../hooks/useForm\";\r\nimport { useFormValidation } from \"../../../../hooks/useFormValidation\";\r\nimport useLoaderContext from \"../../../../hooks/useLoaderContext\";\r\nimport { SERVICES_POST } from \"../../../../services/services.axios\";\r\nimport { MessageUtil } from \"../../../../util/MessageUtil\";\r\n\r\nconst dataInitialFilter = {\r\n  GRADOS: \"\",\r\n  ESTADO: true,\r\n};\r\n\r\nconst paginate = {\r\n  rowsPerPage: 10,\r\n  page: 0,\r\n  count: 0,\r\n};\r\n\r\nconst estadoList = [\r\n  { label: \"Activo\", value: true },\r\n  { label: \"Inactivo\", value: false }\r\n]\r\n\r\nexport default function GradosDetail() {\r\n  const [dataForm, handleDataFormChange, resetData] = useForm(dataInitialFilter);\r\n  const [pagination, setPagination] = useState(paginate);\r\n  const [grados, setGrados] = useState([]);\r\n  const setLoader = useLoaderContext();\r\n  const [open, setOpen] = useState(false)\r\n  const [isDataToEdit, setIsDataToEdit] = useState(null)\r\n\r\n  const getGrados = (rowsPerPage = 10, page = 1) => {\r\n    setLoader(true);\r\n    SaveRequestData({\r\n      path: pathServer.ADMINISTRACION.GRADOS.INDEX,\r\n      body: dataForm,\r\n      fnRequest: SERVICES_POST,\r\n      pagination: true,\r\n      rowsPerPage,\r\n      page,\r\n      success: (resp) => {\r\n        setLoader(false);\r\n        console.log(resp);\r\n        let { rowsPerPage, count, page } = resp;\r\n        --page;\r\n        setGrados(resp.data);\r\n        setPagination({ rowsPerPage, count, page });\r\n      },\r\n      error: (err) => {\r\n        setLoader(false);\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n      },\r\n    });\r\n  };\r\n\r\n  const saveGrado = () => {\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    getGrados();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Stack direction=\"row\" spacing={3}>\r\n        <Controls.Title variant=\"h1\" component=\"h1\" title=\"Grados\" />\r\n\r\n        <Controls.ButtonComponent\r\n          variant=\"primary-small\"\r\n          type=\"admin\"\r\n          title=\"Nuevo Grado\"\r\n          onClick={() => setOpen(true)}\r\n        />\r\n      </Stack>\r\n      <br />\r\n      <Box>\r\n        <Controls.TextComponent variant=\"h3\" component=\"div\">\r\n          Filtros de Búsqueda\r\n        </Controls.TextComponent>\r\n        <br />\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={3}>\r\n            <Controls.InputComponent label=\"Grados\" />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Controls.InputComponent label=\"Estado\" />\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <ButtonsSearchComponent resetForm={resetData} filterForm={getGrados} />\r\n      </Box>\r\n      <br />\r\n      <Controls.TableComponents>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Grado</TableCell>\r\n              <TableCell>Nivel Estudio</TableCell>\r\n              <TableCell>Opciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {grados?.length > 0 ? (\r\n              grados.map((el, index) => {\r\n                <TableRow key={index}>\r\n                  <TableCell>{el.DESCRIPCION}</TableCell>\r\n                  <TableCell>{el.NIVEL_ESTUDIO}</TableCell>\r\n                  <TableCell>\r\n                   <Stack direction=\"row\" spacing={1}>\r\n                      <Controls.ButtonIconComponent\r\n                        title=\"Ver\"\r\n                        icon={ICON.EDIT}\r\n                      />\r\n                      <Controls.ButtonIconComponent\r\n                        title=\"Ver\"\r\n                        icon={ICON.DELETE}\r\n                      />\r\n                    </Stack>\r\n                  </TableCell>\r\n                </TableRow>  \r\n              })\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={3} sx={{ textAlign: \"center\" }}>Sin Filas</TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </Controls.TableComponents>\r\n\r\n      <ModalGrados \r\n        open={open}\r\n        setOpen={setOpen}\r\n        saveGrado={saveGrado}\r\n        isDataToEdit={isDataToEdit}\r\n        setIsDataToEdit={setIsDataToEdit}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst ModalGrados = ({ open, setOpen, saveGrado, isDataToEdit, setIsDataToEdit }) => {\r\n  const validate = (fieldValues = data) =>  {\r\n    let temp = {...errors};\r\n    \r\n    if (\"NIVEL_ESTUDIO\" in fieldValues) {\r\n      temp.NIVEL_ESTUDIO = !fieldValues.NIVEL_ESTUDIO ? \"El campo Nivel de Estudio es requerido\" : \"\";\r\n    } \r\n\r\n    if (\"ESTADO\" in fieldValues) {\r\n      temp.ESTADO = typeof fieldValues.ESTADO !== \"boolean\" ? \"El campo Estado es requerido\" : \"\";\r\n    } \r\n    \r\n    setErrors({...temp});\r\n    if (fieldValues === data) {\r\n      return Object.values(temp).every((x) => x === '');\r\n    }\r\n  }\r\n\r\n  const {data, setData, errors, setErrors, handleInputFormChange, resetForm} = useFormValidation(dataInitialFilter, true, validate);\r\n  const closeModal = () => {\r\n    resetForm()\r\n    setOpen(false)\r\n    setIsDataToEdit(null)\r\n  }\r\n\r\n  const guardarDatos = () => {\r\n    if (validate()) {\r\n      saveGrado(data)\r\n      setIsDataToEdit(null)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isDataToEdit) {\r\n      setData(isDataToEdit)\r\n    }\r\n  }, [isDataToEdit, setData])\r\n\r\n  return (\r\n    <Controls.Modal\r\n    open={open}\r\n    setOpen={closeModal}\r\n    minWidth={600}\r\n    fullWidth={true}\r\n    maxWidth=\"sm\"\r\n    title=\"Nuevo Grado\"\r\n    >\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Controls.InputComponent\r\n            label=\"Grado\"\r\n            name=\"NIVEL_ESTUDIO\"\r\n            onChange={handleInputFormChange}\r\n            error={errors.NIVEL_ESTUDIO}\r\n            value={data.NIVEL_ESTUDIO}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Controls.SelectComponent\r\n            label=\"Estado\"\r\n            list={estadoList}\r\n            name=\"ESTADO\"\r\n            onChange={handleInputFormChange}\r\n            error={errors.ESTADO}\r\n            value={data.ESTADO}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      <Stack direction=\"row\" spacing={3} justifyContent=\"center\">\r\n        <Controls.ButtonComponent\r\n          title=\"VOLVER\"\r\n          variant=\"secondary-normal\"\r\n          type=\"admin\"\r\n          icon={ICON.BACK}\r\n          onClick={closeModal}\r\n        />\r\n        <Controls.ButtonComponent\r\n          title=\"Guardar\"\r\n          variant=\"primary-normal\"\r\n          type=\"admin\"\r\n          icon={ICON.SAVE}\r\n          onClick={() => guardarDatos()}\r\n        />\r\n      </Stack>\r\n    </Controls.Modal>\r\n  )\r\n}","import { Box, Grid, Stack, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ButtonsSearchComponent from \"../../../../components/utilComponents/ButtonsSearchComponent\";\r\nimport { pathServer } from \"../../../../config/router/path\";\r\nimport { pathFront } from '../../../../config/router/pathFront';\r\nimport Controls from \"../../../../framework/components/Controls\";\r\nimport { ICON } from \"../../../../framework/components/icons/Icon\";\r\nimport { SaveRequestData } from \"../../../../helpers/helpRequestBackend\";\r\nimport { useForm } from \"../../../../hooks/useForm\";\r\nimport { useFormValidation } from '../../../../hooks/useFormValidation';\r\nimport useLoaderContext from \"../../../../hooks/useLoaderContext\";\r\nimport { SERVICES_PUT, SERVICES_POST } from \"../../../../services/services.axios\";\r\nimport { AlertUtilDelete, AlertUtilRelease } from '../../../../util/AlertUtil';\r\nimport { MessageUtil } from \"../../../../util/MessageUtil\";\r\n\r\nconst dataInitialFilter = {\r\n  NIVEL_ESTUDIO: \"\",\r\n  ESTADO: true,\r\n};\r\n\r\nconst paginate = {\r\n  rowsPerPage: 10,\r\n  page: 0,\r\n  count: 0,\r\n};\r\n\r\nconst estadoList = [\r\n  { label: \"Activo\", value: true },\r\n  { label: \"Inactivo\", value: false }\r\n]\r\n\r\nexport default function NivelEstudioDetail () {\r\n  const [dataForm, handleDataFormChange, resetData] = useForm(dataInitialFilter);\r\n  const [isDataToEdit, setIsDataToEdit] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [pagination, setPagination] = useState(paginate);\r\n  const [nivelEstudio, setNivelEstudio] = useState([]);\r\n  const setLoader = useLoaderContext();\r\n  const navigate = useNavigate()\r\n\r\n  const getNivelEstudio = (rowsPerPage = 10, page = 1) => {\r\n    setLoader(true);\r\n    SaveRequestData({\r\n      path: pathServer.ADMINISTRACION.NIVEL_ESTUDIO.INDEX,\r\n      body: dataForm,\r\n      fnRequest: SERVICES_POST,\r\n      pagination: true,\r\n      rowsPerPage,\r\n      page,\r\n      success: (resp) => {\r\n        setLoader(false);\r\n        let { rowsPerPage, count, page } = resp;\r\n        --page;\r\n        setNivelEstudio(resp.data);\r\n        setPagination({ rowsPerPage, count, page });\r\n      },\r\n      error: (err) => {\r\n        setLoader(false);\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n      },\r\n    });\r\n  };\r\n\r\n  const saveNivelEstudio = (dataSave) => {\r\n    setLoader(true);\r\n    SaveRequestData({\r\n      path: pathServer.ADMINISTRACION.NIVEL_ESTUDIO.NEW,\r\n      body: dataSave,\r\n      fnRequest: SERVICES_POST,\r\n      success: (resp) => {\r\n        setLoader(false);\r\n        getNivelEstudio()\r\n        MessageUtil({ message: resp.statusText, type: \"success\", seg: 10 });\r\n      },\r\n      error: (err) => {\r\n        setLoader(false);\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n      },\r\n    });\r\n  }\r\n\r\n  const handleClickEdit = (dataEdit) => {\r\n    setIsDataToEdit(dataEdit)\r\n    setOpen(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getNivelEstudio();\r\n  }, []);\r\n  \r\n  return (\r\n    <Box>\r\n      <Stack direction=\"row\" spacing={3}>\r\n        <Controls.Title variant=\"h1\" component=\"h1\" title=\"Nivel Estudio\" />\r\n\r\n        <Controls.ButtonComponent\r\n          variant=\"primary-small\"\r\n          type=\"admin\"\r\n          title=\"Nuevo\"\r\n          onClick={() => setOpen(true)}\r\n        />\r\n      </Stack>\r\n      <br />\r\n      <Box>\r\n        <Controls.TextComponent variant=\"h3\" component=\"div\">Filtros de Búsqueda</Controls.TextComponent>\r\n        <br />\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={3}>\r\n            <Controls.InputComponent \r\n              label=\"Nivel Estudio\" \r\n              name=\"NIVEL_ESTUDIO\"\r\n              onChange={handleDataFormChange}\r\n              value={dataForm.NIVEL_ESTUDIO}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Controls.SelectComponent \r\n              label=\"Estado\" \r\n              list={estadoList}\r\n              name=\"ESTADO\"\r\n              onChange={handleDataFormChange}\r\n              value={dataForm.ESTADO}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <ButtonsSearchComponent resetForm={resetData} filterForm={getNivelEstudio} />\r\n      </Box>\r\n      <br />\r\n      <Controls.TableComponents\r\n        pagination={pagination}\r\n        setPagination={setPagination}\r\n        fnPagination={getNivelEstudio}\r\n      >\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Nivel Estudio</TableCell>\r\n              <TableCell>Estado</TableCell>\r\n              <TableCell>Opciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {nivelEstudio?.length > 0 ? (\r\n              nivelEstudio.map((el, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{el.NIVEL_ESTUDIO}</TableCell>\r\n                  <TableCell>{el.ESTADO ? 'Activo' : 'Inactivo' }</TableCell>\r\n                  <TableCell>\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <Controls.ButtonIconComponent\r\n                        title=\"Editar\"\r\n                        icon={ICON.EDIT}\r\n                        onClick={() => handleClickEdit(el)}\r\n                      />\r\n                      <Controls.ButtonComponent\r\n                        variant=\"secondary-small\"\r\n                        type=\"admin\"\r\n                        title=\"configurar\"\r\n                        onClick={() => navigate(pathFront.GRADOS.ADMIN)}\r\n                      />\r\n                    </Stack>\r\n                  </TableCell>\r\n                </TableRow>  \r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={3} sx={{ textAlign: \"center\" }}>Sin Filas</TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <ModalNivelEstudioSave\r\n          open={open}\r\n          setOpen={setOpen}\r\n          saveNivelEstudio={saveNivelEstudio}\r\n          isDataToEdit={isDataToEdit}\r\n          setIsDataToEdit={setIsDataToEdit}\r\n        />\r\n      </Controls.TableComponents>    \r\n    </Box>\r\n  )\r\n}\r\n\r\nconst ModalNivelEstudioSave = ({ open, setOpen, saveNivelEstudio, isDataToEdit, setIsDataToEdit }) => {\r\n  const validate = (fieldValues = data) =>  {\r\n    let temp = {...errors};\r\n    \r\n    if (\"NIVEL_ESTUDIO\" in fieldValues) {\r\n      temp.NIVEL_ESTUDIO = !fieldValues.NIVEL_ESTUDIO ? \"El campo Nivel de Estudio es requerido\" : \"\";\r\n    } \r\n\r\n    if (\"ESTADO\" in fieldValues) {\r\n      temp.ESTADO = typeof fieldValues.ESTADO !== \"boolean\" ? \"El campo Estado es requerido\" : \"\";\r\n    } \r\n    \r\n    setErrors({...temp});\r\n    if (fieldValues === data) {\r\n      return Object.values(temp).every((x) => x === '');\r\n    }\r\n  }\r\n\r\n  const {data, setData, errors, setErrors, handleInputFormChange, resetForm} = useFormValidation(dataInitialFilter, true, validate);\r\n  const closeModal = () => {\r\n    resetForm()\r\n    setOpen(false)\r\n    setIsDataToEdit(null)\r\n  }\r\n\r\n  const guardarDatos = () => {\r\n    if (validate()) {\r\n      saveNivelEstudio(data)\r\n      setIsDataToEdit(null)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isDataToEdit) {\r\n      setData(isDataToEdit)\r\n    }\r\n  }, [isDataToEdit, setData])\r\n\r\n  return (\r\n    <Controls.Modal\r\n    open={open}\r\n    setOpen={closeModal}\r\n    minWidth={600}\r\n    fullWidth={true}\r\n    maxWidth=\"sm\"\r\n    title=\"Nuevo Nivel Estudio\"\r\n    >\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Controls.InputComponent\r\n            label=\"Nivel Estudio\"\r\n            name=\"NIVEL_ESTUDIO\"\r\n            onChange={handleInputFormChange}\r\n            error={errors.NIVEL_ESTUDIO}\r\n            value={data.NIVEL_ESTUDIO}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Controls.SelectComponent\r\n            label=\"Estado\"\r\n            list={estadoList}\r\n            name=\"ESTADO\"\r\n            onChange={handleInputFormChange}\r\n            error={errors.ESTADO}\r\n            value={data.ESTADO}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      <Stack direction=\"row\" spacing={3} justifyContent=\"center\">\r\n        <Controls.ButtonComponent\r\n          title=\"VOLVER\"\r\n          variant=\"secondary-normal\"\r\n          type=\"admin\"\r\n          icon={ICON.BACK}\r\n          onClick={closeModal}\r\n        />\r\n        <Controls.ButtonComponent\r\n          title=\"Guardar\"\r\n          variant=\"primary-normal\"\r\n          type=\"admin\"\r\n          icon={ICON.SAVE}\r\n          onClick={() => guardarDatos()}\r\n        />\r\n      </Stack>\r\n    </Controls.Modal>\r\n  )\r\n}"],"names":["GradosAdminPage","React","value","setValue","onChange","event","newValue","label","id","index","ConfiguracionDetail","direction","spacing","variant","component","title","type","container","item","xs","justifyContent","icon","ICON","dataInitialFilter","GRADOS","ESTADO","paginate","rowsPerPage","page","count","estadoList","GradosDetail","useForm","dataForm","resetData","useState","setPagination","grados","setGrados","setLoader","useLoaderContext","open","setOpen","isDataToEdit","setIsDataToEdit","getGrados","SaveRequestData","path","pathServer","body","fnRequest","SERVICES_POST","pagination","success","resp","console","log","data","error","err","MessageUtil","message","statusText","seg","useEffect","onClick","resetForm","filterForm","length","map","el","DESCRIPCION","NIVEL_ESTUDIO","colSpan","sx","textAlign","ModalGrados","saveGrado","validate","fieldValues","temp","errors","setErrors","Object","values","every","x","useFormValidation","setData","handleInputFormChange","closeModal","minWidth","fullWidth","maxWidth","name","list","NivelEstudioDetail","handleDataFormChange","nivelEstudio","setNivelEstudio","navigate","useNavigate","getNivelEstudio","fnPagination","pathFront","ModalNivelEstudioSave","saveNivelEstudio","dataSave"],"sourceRoot":""}