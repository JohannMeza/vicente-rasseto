{"version":3,"file":"static/js/782.b53b391a.chunk.js","mappings":"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","sources":["modules/administrador/paginas/detail/PaginasDetailConfiguracion.js"],"sourcesContent":["import { Box, Grid, Stack, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ButtonsSearchComponent from '../../../../components/utilComponents/ButtonsSearchComponent';\r\nimport { CONFIG_INDEX, pathServer } from '../../../../config/router/path';\r\nimport { pathFront } from '../../../../config/router/pathFront';\r\nimport Controls from '../../../../framework/components/Controls';\r\nimport { ICON } from '../../../../framework/components/icons/Icon';\r\nimport { SaveRequestData } from '../../../../helpers/helpRequestBackend';\r\nimport { useForm } from '../../../../hooks/useForm';\r\nimport useLoaderContext from '../../../../hooks/useLoaderContext';\r\nimport { listMenu, searchSubpaginas } from '../../../../services/configuracion_menu.axios';\r\nimport { SERVICES_POST } from '../../../../services/services.axios';\r\nimport { MessageUtil } from '../../../../util/MessageUtil';\r\n\r\nconst paginate = {\r\n  rowsPerPage: 10,\r\n  page: 0,\r\n  count: 0\r\n}\r\n\r\nconst paginateSubpaginas = {\r\n  rowsPerPage: 10,\r\n  page: 0,\r\n  count: 0\r\n}\r\n\r\nconst dataInitialFilter = {\r\n  NOMBRE_MENU: null,\r\n  PATH: null,\r\n  ESTADO: true\r\n}\r\n\r\nconst listEstado = [\r\n  { label: 'Activo', value: true },\r\n  { label: 'Inactivo', value: false },\r\n]\r\n\r\nexport default function PaginasDetailConfiguracion () {\r\n  const [pagination, setPagination] = useState(paginate)\r\n  const [paginationSubpaginas, setPaginationSubpaginas] = useState(paginateSubpaginas)\r\n  const setLoader = useLoaderContext()\r\n  const [paginas, setPaginas] = useState([])\r\n  const [subpaginas, setSubpaginas] = useState([])\r\n  const [idPaginaSelect, setIdPaginaSelect] = useState(false)\r\n  const [dataForm, handleDataFormChange, resetData] = useForm(dataInitialFilter)\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const getPaginas = (rowsPerPage = 10, page = 1) => {\r\n    setLoader(true)\r\n    SaveRequestData({\r\n      path: CONFIG_INDEX,\r\n      body: dataForm,\r\n      fnRequest: SERVICES_POST,\r\n      pagination: true,\r\n      rowsPerPage,\r\n      page,\r\n      success: (resp) => {\r\n        setLoader(false)\r\n        let {rowsPerPage, count, page} = resp;\r\n        --page;\r\n        setPaginas(resp.data);\r\n        setPagination({rowsPerPage, count, page})\r\n      },\r\n      error: (err) => {\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n      },\r\n    })\r\n  }\r\n\r\n  const searchSubPaginas = (idPagina) => {\r\n    setLoader(true)\r\n    SaveRequestData({\r\n      path: pathServer.CONFIG_MENU.SEARCH_SUBPAGINAS + idPagina,\r\n      body: {},\r\n      fnRequest: SERVICES_POST,\r\n      success: (resp) => {\r\n        let arrSubpaginas = resp.data?.ID_CONFIGURACION_SUBMENU;\r\n        setSubpaginas(arrSubpaginas)\r\n        setPaginationSubpaginas({rowsPerPage: 10, count: arrSubpaginas.length, page: 0})\r\n        setIdPaginaSelect(idPagina)\r\n        setLoader(false)\r\n      },\r\n      error: (err) => {\r\n        setLoader(false)\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n      },\r\n    });\r\n  };\r\n\r\n  const redirecConfiguracion = () => {\r\n    idPaginaSelect && navigate(pathFront.ADMINISTRACION.PAGINAS.CONFIGURACION+idPaginaSelect)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPaginas()\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <Box>\r\n      <Stack direction=\"row\" spacing={3}>\r\n        <Controls.Title variant=\"h1\" component=\"h1\" title=\"Páginas\" />\r\n      </Stack>\r\n      <br />\r\n        \r\n      <Box>\r\n          <Controls.TextComponent variant=\"h3\" component=\"div\">Filtros de Búsqueda</Controls.TextComponent>\r\n          <br />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <Controls.InputComponent label=\"Nombre de la Página\" name=\"NOMBRE_MENU\" onChange={handleDataFormChange} value={dataForm.NOMBRE_MENU} />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Controls.InputComponent label=\"Ruta\" name=\"PATH\" onChange={handleDataFormChange} value={dataForm.PATH} />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Controls.SelectComponent label=\"Estado\" list={listEstado} name=\"ESTADO\" onChange={handleDataFormChange} value={dataForm.ESTADO} />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <ButtonsSearchComponent\r\n            resetForm={resetData}\r\n            filterForm={getPaginas}\r\n          />\r\n        </Box>\r\n\r\n      <br />\r\n\r\n      <Grid container direction=\"row\" spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Controls.TableComponents\r\n            pagination={pagination}\r\n            setPagination={setPagination}\r\n            fnPagination={getPaginas}\r\n          >\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Nombre</TableCell>\r\n                  <TableCell>Ruta</TableCell>\r\n                  <TableCell>Operación</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {paginas.length > 0 ? (\r\n                paginas.map((el, index) => (\r\n                  <TableRow \r\n                    role=\"checkbox\" \r\n                    tabIndex={-1} \r\n                    key={index} \r\n                    className={idPaginaSelect && idPaginaSelect === el._id ? \"background-gris_500\" : \"\"}\r\n                  >\r\n                    <TableCell>{el.NOMBRE_MENU}</TableCell>\r\n                    <TableCell>{el.PATH}</TableCell>\r\n                    <TableCell>\r\n                      <Stack direction=\"row\" spacing={1}>\r\n                        <Controls.ButtonIconComponent\r\n                          title=\"Ver\"\r\n                          icon={ICON.PASS_VISIBLE}\r\n                          onClick={() => searchSubPaginas(el._id)}\r\n                        />\r\n                      </Stack>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n                  <TableCell colSpan={4} align=\"center\">\r\n                    Todavía no se insertó ningun registro\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            </Table>\r\n          \r\n          </Controls.TableComponents>  \r\n        </Grid> \r\n        \r\n        <Grid item xs={6}>\r\n          <Controls.TableComponents\r\n            pagination={paginationSubpaginas}\r\n            setPagination={setPaginationSubpaginas}\r\n          >\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Nombre</TableCell>\r\n                  <TableCell>Ruta</TableCell>\r\n                  <TableCell>\r\n                    <Controls.ButtonComponent \r\n                      title=\"configurar\"\r\n                      variant=\"primary-small\"\r\n                      type=\"admin\"\r\n                      icon={ICON.SAVE}\r\n                      onClick={() => redirecConfiguracion()}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {subpaginas.length > 0 ? (\r\n                subpaginas.slice(\r\n                  paginationSubpaginas.page * paginationSubpaginas.rowsPerPage,\r\n                  paginationSubpaginas.page * paginationSubpaginas.rowsPerPage +\r\n                    paginationSubpaginas.rowsPerPage\r\n                ).map((el, index) => (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    <TableCell>{el.NOMBRE_SUBMENU}</TableCell>\r\n                    <TableCell>{el.PATH}</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n                  <TableCell colSpan={4} align=\"center\">\r\n                    Todavía no se insertó ningun registro\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            </Table>\r\n          \r\n          </Controls.TableComponents>  \r\n        </Grid> \r\n      </Grid>\r\n    </Box>\r\n  )\r\n}"],"names":["paginate","rowsPerPage","page","count","paginateSubpaginas","dataInitialFilter","NOMBRE_MENU","PATH","ESTADO","listEstado","label","value","PaginasDetailConfiguracion","useState","pagination","setPagination","paginationSubpaginas","setPaginationSubpaginas","setLoader","useLoaderContext","paginas","setPaginas","subpaginas","setSubpaginas","idPaginaSelect","setIdPaginaSelect","useForm","dataForm","handleDataFormChange","resetData","navigate","useNavigate","getPaginas","SaveRequestData","path","CONFIG_INDEX","body","fnRequest","SERVICES_POST","success","resp","data","error","err","MessageUtil","message","statusText","type","seg","useEffect","direction","spacing","variant","component","title","container","item","xs","name","onChange","list","resetForm","filterForm","fnPagination","stickyHeader","length","map","el","index","role","tabIndex","className","_id","icon","ICON","onClick","idPagina","pathServer","arrSubpaginas","ID_CONFIGURACION_SUBMENU","hover","colSpan","align","pathFront","slice","NOMBRE_SUBMENU"],"sourceRoot":""}