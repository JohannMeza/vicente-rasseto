{"version":3,"file":"static/js/329.bbb34f54.chunk.js","mappings":"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","sources":["modules/administrador/paginas/admin/PaginasAdminPage.js","modules/administrador/paginas/detail/PaginasDetail.js","modules/administrador/paginas/detail/PaginasDetailConfiguracion.js","modules/administrador/paginas/detail/SubpaginasDetail.js"],"sourcesContent":["import { Box, Tabs, Tab } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport Controls from \"../../../../framework/components/Controls\";\r\nimport PaginasDetailConfiguracion from \"../detail/PaginasDetailConfiguracion\";\r\nimport PaginasDetail from \"../detail/PaginasDetail\";\r\nimport SubpaginasDetail from \"../detail/SubpaginasDetail\";\r\n\r\nconst PaginasAdminPage = () => {\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => setValue(newValue);\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"basic tabs example\"\r\n        >\r\n          <Tab\r\n            label=\"Páginas\"\r\n            id=\"simple-tab-1\"\r\n            aria-controls=\"simple-tabpanel-1\"\r\n          />\r\n          <Tab\r\n            label=\"Sub Paginas\"\r\n            id=\"simple-tab-1\"\r\n            aria-controls=\"simple-tabpanel-1\"\r\n          />\r\n          <Tab\r\n            label=\"Configuración\"\r\n            id=\"simple-tab-1\"\r\n            aria-controls=\"simple-tabpanel-1\"\r\n          />\r\n        </Tabs>\r\n      </Box>\r\n      <br />\r\n      <Controls.TabPanel value={value} index={0}>\r\n        <PaginasDetail />\r\n      </Controls.TabPanel>\r\n      <Controls.TabPanel value={value} index={1}>\r\n        <SubpaginasDetail />\r\n      </Controls.TabPanel>\r\n      <Controls.TabPanel value={value} index={2}>\r\n        <PaginasDetailConfiguracion />\r\n      </Controls.TabPanel>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaginasAdminPage;\r\n","// import React, { useEffect } from \"react\";\r\n// import Controls from \"../../../../framework/components/Controls\";\r\n// import { Stack, Grid } from \"@mui/material\";\r\n// import { ICON } from \"../../../../framework/components/icons/Icon\";\r\n// import { useFormValidation } from \"../../../../hooks/useFormValidation\";\r\n\r\n// export default function PaginasDetailModalPage({\r\n//   open,\r\n//   setOpen,\r\n//   listSubPaginas,\r\n//   setListSubPaginas,\r\n//   dataSubmenu,\r\n//   setDataSubmenu,\r\n//   id\r\n// }) {\r\n//   const dataInitial = {\r\n//     ID_MENU: id,\r\n//     PATH: \"\",\r\n//     NOMBRE_SUBMENU: \"\",\r\n//     NOMBRE_ICON: \"\",\r\n//     _id: \"\"\r\n//   };\r\n\r\n//   const validate = (fieldValues = data) => {\r\n//     let temp = { ...errors };\r\n//     if (\"PATH\" in fieldValues) {\r\n//       temp.PATH =\r\n//         fieldValues.PATH === \"\"\r\n//           ? \"El campo Ruta de la Página es requerido\"\r\n//           : \"\";\r\n//     }\r\n//     if (\"NOMBRE_SUBMENU\" in fieldValues) {\r\n//       temp.NOMBRE_SUBMENU =\r\n//         fieldValues.NOMBRE_SUBMENU === \"\"\r\n//           ? \"El campo Nombre de la Sub Página es requerido\"\r\n//           : \"\";\r\n//     }\r\n//     if (\"NOMBRE_ICON\" in fieldValues) {\r\n//       temp.NOMBRE_ICON =\r\n//         fieldValues.NOMBRE_ICON === \"\"\r\n//           ? \"El campo Nombre del Icono es requerido\"\r\n//           : \"\";\r\n//     }\r\n//     setErrors({ ...temp });\r\n//     if (fieldValues === data) {\r\n//       return Object.values(temp).every((x) => x === \"\");\r\n//     }\r\n//   };\r\n\r\n//   const { data, setData, errors, setErrors, handleInputFormChange, resetForm } =\r\n//     useFormValidation(dataInitial, validate);\r\n\r\n//   const addSubpagina = () => {\r\n//     if (validate()) {\r\n//       if (data._id || data.id) {\r\n//         let arrSubPagina = []\r\n//         if (data._id) {\r\n//           arrSubPagina = listSubPaginas.map(el => el._id === data._id ? data : el)\r\n//         }\r\n\r\n//         if (data.id) {\r\n//           arrSubPagina = listSubPaginas.map(el => el.id === data.id ? data : el)\r\n//         }\r\n//         setListSubPaginas(arrSubPagina)\r\n//       } else {\r\n//         setListSubPaginas([...listSubPaginas, {...data, id: Date.now().toString()}]);\r\n//       }\r\n\r\n//       setOpen(false);\r\n//       resetForm();\r\n//       setTimeout(() => {\r\n//         setDataSubmenu(null);\r\n//       }, 500)\r\n//     }\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setOpen(false);\r\n//     resetForm()\r\n//     setTimeout(() => {\r\n//       setDataSubmenu(null);\r\n//     }, 500)\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (dataSubmenu) setData(dataSubmenu)\r\n//   }, [dataSubmenu, setData]);\r\n\r\n//   return (\r\n//     <Controls.Modal\r\n//       open={open}\r\n//       setOpen={closeModal}\r\n//       minWidth={600}\r\n//       fullWidth={true}\r\n//       maxWidth=\"sm\"\r\n//       title={dataSubmenu ? \"Editar Sub Página\" : \"Nueva Sub Página\"}\r\n//     >\r\n//       <Grid container spacing={3}>\r\n//         <Grid item xs={12}>\r\n//           <Controls.InputComponent\r\n//             label=\"Nombre de la Sub Página\"\r\n//             name=\"NOMBRE_SUBMENU\"\r\n//             value={data.NOMBRE_SUBMENU}\r\n//             error={errors.NOMBRE_SUBMENU}\r\n//             onChange={handleInputFormChange}\r\n//           />\r\n//         </Grid>\r\n//         <Grid item xs={12}>\r\n//           <Controls.InputComponent\r\n//             label=\"Ruta de la Página\"\r\n//             name=\"PATH\"\r\n//             value={data.PATH}\r\n//             error={errors.PATH}\r\n//             onChange={handleInputFormChange}\r\n//           />\r\n//         </Grid>\r\n//         <Grid item xs={12}>\r\n//           <Controls.InputComponent\r\n//             label=\"Nombre del Icono\"\r\n//             name=\"NOMBRE_ICON\"\r\n//             value={data.NOMBRE_ICON}\r\n//             error={errors.NOMBRE_ICON}\r\n//             onChange={handleInputFormChange}\r\n//           />\r\n//         </Grid>\r\n//       </Grid>\r\n//       <br />\r\n//       <Stack direction=\"row\" spacing={3} justifyContent=\"center\">\r\n//         <Controls.ButtonComponent\r\n//           title=\"VOLVER\"\r\n//           variant=\"secondary-normal\"\r\n//           type=\"admin\"\r\n//           icon={ICON.BACK}\r\n//           onClick={closeModal}\r\n//         />\r\n//         <Controls.ButtonComponent\r\n//           title={dataSubmenu ? \"Editar\" : \"Guardar\"}\r\n//           variant=\"primary-normal\"\r\n//           type=\"admin\"\r\n//           icon={ICON.SAVE}\r\n//           onClick={addSubpagina}\r\n//         />\r\n//       </Stack>\r\n//     </Controls.Modal>\r\n//   );\r\n// }\r\n\r\nimport { Box, Grid, Stack, Table, TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport ButtonsSearchComponent from \"../../../../components/utilComponents/ButtonsSearchComponent\";\r\nimport { CONFIG_DELETE, CONFIG_INDEX, CONFIG_NEW, pathServer } from \"../../../../config/router/path\";\r\nimport Controls from \"../../../../framework/components/Controls\";\r\nimport { ICON } from \"../../../../framework/components/icons/Icon\";\r\nimport { SaveRequestData } from \"../../../../helpers/helpRequestBackend\";\r\nimport { useForm } from \"../../../../hooks/useForm\";\r\nimport { useFormValidation } from \"../../../../hooks/useFormValidation\";\r\nimport useLoaderContext from \"../../../../hooks/useLoaderContext\";\r\nimport { listMenu, deleteMenu, saveMenu } from \"../../../../services/configuracion_menu.axios\";\r\nimport { SERVICES_POST } from \"../../../../services/services.axios\";\r\nimport { AlertUtilDelete, AlertUtilRelease } from \"../../../../util/AlertUtil\";\r\nimport { MessageUtil } from \"../../../../util/MessageUtil\";\r\n\r\nconst paginate = {\r\n  rowsPerPage: 10,\r\n  page: 0,\r\n  count: 0\r\n}\r\n\r\nconst dataInitialPaginas = {\r\n  NOMBRE_MENU: null,\r\n  NOMBRE_ICON: null,\r\n  PATH: null,\r\n  ESTADO: true\r\n};\r\n\r\nconst dataInitialFilter = {\r\n  NOMBRE_MENU: null,\r\n  PATH: null,\r\n  ESTADO: true\r\n}\r\n\r\nconst listEstado = [\r\n  { label: 'Activo', value: true },\r\n  { label: 'Inactivo', value: false },\r\n]\r\n\r\nexport default function PaginasDetail() {\r\n  const [paginas, setPaginas] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false)\r\n  const {data, setData, errors, handleInputFormChange, resetForm} = useFormValidation(dataInitialPaginas, true)\r\n  const [dataForm, handleDataFormChange, resetData] = useForm(dataInitialFilter)\r\n  const [pagination, setPagination] = useState(paginate)\r\n  const setLoader = useLoaderContext()\r\n\r\n  const getPaginas = (rowsPerPage = 10, page = 1) => {\r\n    setLoader(true)\r\n    SaveRequestData({\r\n      path: CONFIG_INDEX,\r\n      body: dataForm,\r\n      fnRequest: listMenu,\r\n      pagination: true,\r\n      rowsPerPage,\r\n      page,\r\n      success: (resp) => {\r\n        setLoader(false)\r\n        let {rowsPerPage, count, page} = resp;\r\n        --page \r\n        setPaginas(resp.data);\r\n        setPagination({rowsPerPage, count, page})\r\n      },\r\n      error: (err) => {\r\n        setLoader(false)\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n      },\r\n    });\r\n  };\r\n\r\n  const agregarPagina = () => {\r\n    console.log(errors)\r\n    setLoader(true);\r\n    if (data._id) {\r\n      SaveRequestData({ // editar\r\n        path: pathServer.CONFIGURACION.MENU.NEW,\r\n        body: {...data},\r\n        fnRequest: SERVICES_POST,\r\n        success: (resp) => {\r\n          getPaginas()\r\n          MessageUtil({ message: resp.statusText, type: \"success\", seg: 10 });\r\n          setOpenModal(false)\r\n          setLoader(false)\r\n        },\r\n        error: (err) => {\r\n          setLoader(false)\r\n          MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n        }\r\n      })\r\n    } else {\r\n      SaveRequestData({ // save\r\n        path: pathServer.CONFIGURACION.MENU.NEW,\r\n        body: {...data},\r\n        fnRequest: SERVICES_POST,\r\n        success: (resp) => {\r\n          getPaginas()\r\n          MessageUtil({ message: resp.statusText, type: \"success\", seg: 10 });\r\n          setOpenModal(false)\r\n          setLoader(false)\r\n        },\r\n        error: (err) => {\r\n          setLoader(false)\r\n          MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const deletePagina = (id) => {\r\n    const config = {\r\n      title: '¿Estás seguro?',\r\n      text: \"Al eliminar la página, no habrá vuelta atrás!\",\r\n      icon: 'warning',\r\n    }\r\n    \r\n    const fnRequestPage = () => {\r\n      SaveRequestData({\r\n        path: `${CONFIG_DELETE}/${id}`,\r\n        body: {},\r\n        fnRequest: deleteMenu,\r\n        success: (resp) => {\r\n          AlertUtilRelease({\r\n            title: '¡Eliminado!',\r\n            text: resp.statusText,\r\n            icon: 'success',\r\n          })\r\n\r\n          getPaginas();\r\n        },\r\n        error: (err) => {\r\n          MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n        },\r\n      })\r\n    }\r\n    \r\n    AlertUtilDelete(fnRequestPage, { config })\r\n  };\r\n\r\n  const editarPagina = (el) => {\r\n    setOpenModal(true)\r\n    setData(el)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPaginas()\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Stack direction=\"row\" spacing={3}>\r\n          <Controls.Title variant=\"h1\" component=\"h1\" title=\"Páginas\" />\r\n\r\n          <Controls.ButtonComponent\r\n            variant=\"primary-small\"\r\n            type=\"admin\"\r\n            title=\"Nueva Página\"\r\n            onClick={() => setOpenModal(true)}\r\n          />\r\n        </Stack>\r\n        \r\n        <br />\r\n        \r\n        <Box>\r\n          <Controls.TextComponent variant=\"h3\" component=\"div\">Filtros de Búsqueda</Controls.TextComponent>\r\n          <br />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <Controls.InputComponent label=\"Nombre de la Página\" name=\"NOMBRE_MENU\" onChange={handleDataFormChange} value={dataForm.NOMBRE_MENU} />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Controls.InputComponent label=\"Ruta\" name=\"PATH\" onChange={handleDataFormChange} value={dataForm.PATH} />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Controls.SelectComponent label=\"Estado\" list={listEstado} name=\"ESTADO\" onChange={handleDataFormChange} value={dataForm.ESTADO} />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <ButtonsSearchComponent\r\n            resetForm={resetData}\r\n            filterForm={getPaginas}\r\n          />\r\n        </Box>\r\n\r\n        <br />\r\n\r\n        <Controls.TableComponents\r\n          pagination={pagination}\r\n          setPagination={setPagination}\r\n          fnPagination={getPaginas}\r\n        >\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Nombre</TableCell>\r\n                <TableCell>Ruta</TableCell>\r\n                <TableCell>Icon</TableCell>\r\n                <TableCell>Operación</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {paginas.length > 0 ? (\r\n                paginas.map((el, index) => (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    <TableCell>{el.NOMBRE_MENU}</TableCell>\r\n                    <TableCell>{el.PATH}</TableCell>\r\n                    <TableCell>{el.NOMBRE_ICON}</TableCell>\r\n                    <TableCell>\r\n                      <Stack direction=\"row\" spacing={1}>\r\n                        <Controls.ButtonIconComponent\r\n                          title=\"Editar\"\r\n                          icon={ICON.EDIT}\r\n                          onClick={() => editarPagina(el)}\r\n                        />\r\n\r\n                        <Controls.ButtonIconComponent\r\n                          title=\"Eliminar\"\r\n                          icon={ICON.DELETE}\r\n                          onClick={() => deletePagina(el._id)}\r\n                        />\r\n                      </Stack>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n                  <TableCell colSpan={4} align=\"center\">\r\n                    Todavía no se insertó ningun registro\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </Controls.TableComponents>\r\n      </Box>\r\n\r\n      <Controls.Modal\r\n        open={openModal}\r\n        setOpen={setOpenModal}\r\n        title={data._id ? \"Editar Página\" : \"Agregar Nueva Página\"}\r\n        fullWidth={true}\r\n        resetForm={resetForm}\r\n        maxWidth=\"sm\"\r\n      >\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Controls.InputComponent\r\n              label=\"Nombre de la página\"\r\n              name=\"NOMBRE_MENU\"\r\n              value={data.NOMBRE_MENU}\r\n              onChange={handleInputFormChange}\r\n              error={errors.NOMBRE_MENU}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Controls.InputComponent\r\n              label=\"Nombre del icono\"\r\n              name=\"NOMBRE_ICON\"\r\n              value={data.NOMBRE_ICON}\r\n              onChange={handleInputFormChange}\r\n              error={errors.NOMBRE_ICON}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Controls.InputComponent\r\n              label=\"Ruta Base\"\r\n              name=\"PATH\"\r\n              value={data.PATH}\r\n              onChange={handleInputFormChange}\r\n              error={errors.PATH}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Controls.SelectComponent\r\n              label=\"Estado\"\r\n              name=\"ESTADO\"\r\n              value={data.ESTADO}\r\n              list={listEstado}\r\n              onChange={handleInputFormChange}\r\n              error={errors.ESTADO}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Stack direction=\"row\" spacing={3} justifyContent=\"center\">\r\n              <Controls.ButtonComponent\r\n                title=\"VOLVER\"\r\n                variant=\"secondary-normal\"\r\n                type=\"admin\"\r\n                icon={ICON.BACK}\r\n                onClick={() => setOpenModal(false)}\r\n              />\r\n\r\n              <Controls.ButtonComponent\r\n                title={data._id ? \"Editar\" : \"Guardar\"}\r\n                variant=\"primary-normal\"\r\n                type=\"admin\"\r\n                icon={ICON.SAVE}\r\n                onClick={() => agregarPagina()}\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n      </Controls.Modal>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Grid, Stack, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ButtonsSearchComponent from '../../../../components/utilComponents/ButtonsSearchComponent';\r\nimport { CONFIG_INDEX, pathServer } from '../../../../config/router/path';\r\nimport { pathFront } from '../../../../config/router/pathFront';\r\nimport Controls from '../../../../framework/components/Controls';\r\nimport { ICON } from '../../../../framework/components/icons/Icon';\r\nimport { SaveRequestData } from '../../../../helpers/helpRequestBackend';\r\nimport { useForm } from '../../../../hooks/useForm';\r\nimport useLoaderContext from '../../../../hooks/useLoaderContext';\r\nimport { listMenu, searchSubpaginas } from '../../../../services/configuracion_menu.axios';\r\nimport { SERVICES_POST } from '../../../../services/services.axios';\r\nimport { MessageUtil } from '../../../../util/MessageUtil';\r\n\r\nconst paginate = {\r\n  rowsPerPage: 10,\r\n  page: 0,\r\n  count: 0\r\n}\r\n\r\nconst paginateSubpaginas = {\r\n  rowsPerPage: 10,\r\n  page: 0,\r\n  count: 0\r\n}\r\n\r\nconst dataInitialFilter = {\r\n  NOMBRE_MENU: null,\r\n  PATH: null,\r\n  ESTADO: true\r\n}\r\n\r\nconst listEstado = [\r\n  { label: 'Activo', value: true },\r\n  { label: 'Inactivo', value: false },\r\n]\r\n\r\nexport default function PaginasDetailConfiguracion () {\r\n  const [pagination, setPagination] = useState(paginate)\r\n  const [paginationSubpaginas, setPaginationSubpaginas] = useState(paginateSubpaginas)\r\n  const setLoader = useLoaderContext()\r\n  const [paginas, setPaginas] = useState([])\r\n  const [subpaginas, setSubpaginas] = useState([])\r\n  const [idPaginaSelect, setIdPaginaSelect] = useState(false)\r\n  const [dataForm, handleDataFormChange, resetData] = useForm(dataInitialFilter)\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const getPaginas = (rowsPerPage = 10, page = 1) => {\r\n    setLoader(true)\r\n    SaveRequestData({\r\n      path: CONFIG_INDEX,\r\n      body: dataForm,\r\n      fnRequest: SERVICES_POST,\r\n      pagination: true,\r\n      rowsPerPage,\r\n      page,\r\n      success: (resp) => {\r\n        setLoader(false)\r\n        let {rowsPerPage, count, page} = resp;\r\n        --page;\r\n        setPaginas(resp.data);\r\n        setPagination({rowsPerPage, count, page})\r\n      },\r\n      error: (err) => {\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n      },\r\n    })\r\n  }\r\n\r\n  const searchSubPaginas = (idPagina) => {\r\n    setLoader(true)\r\n    SaveRequestData({\r\n      path: pathServer.CONFIG_MENU.SEARCH_SUBPAGINAS + idPagina,\r\n      body: {},\r\n      fnRequest: SERVICES_POST,\r\n      success: (resp) => {\r\n        let arrSubpaginas = resp.data?.ID_CONFIGURACION_SUBMENU;\r\n        setSubpaginas(arrSubpaginas)\r\n        setPaginationSubpaginas({rowsPerPage: 10, count: arrSubpaginas.length, page: 0})\r\n        setIdPaginaSelect(idPagina)\r\n        setLoader(false)\r\n      },\r\n      error: (err) => {\r\n        setLoader(false)\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n      },\r\n    });\r\n  };\r\n\r\n  const redirecConfiguracion = () => {\r\n    idPaginaSelect && navigate(pathFront.ADMINISTRACION.PAGINAS.CONFIGURACION+idPaginaSelect)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPaginas()\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <Box>\r\n      <Stack direction=\"row\" spacing={3}>\r\n        <Controls.Title variant=\"h1\" component=\"h1\" title=\"Páginas\" />\r\n      </Stack>\r\n      <br />\r\n        \r\n      <Box>\r\n          <Controls.TextComponent variant=\"h3\" component=\"div\">Filtros de Búsqueda</Controls.TextComponent>\r\n          <br />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <Controls.InputComponent label=\"Nombre de la Página\" name=\"NOMBRE_MENU\" onChange={handleDataFormChange} value={dataForm.NOMBRE_MENU} />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Controls.InputComponent label=\"Ruta\" name=\"PATH\" onChange={handleDataFormChange} value={dataForm.PATH} />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Controls.SelectComponent label=\"Estado\" list={listEstado} name=\"ESTADO\" onChange={handleDataFormChange} value={dataForm.ESTADO} />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <ButtonsSearchComponent\r\n            resetForm={resetData}\r\n            filterForm={getPaginas}\r\n          />\r\n        </Box>\r\n\r\n      <br />\r\n\r\n      <Grid container direction=\"row\" spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Controls.TableComponents\r\n            pagination={pagination}\r\n            setPagination={setPagination}\r\n            fnPagination={getPaginas}\r\n          >\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Nombre</TableCell>\r\n                  <TableCell>Ruta</TableCell>\r\n                  <TableCell>Operación</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {paginas.length > 0 ? (\r\n                paginas.map((el, index) => (\r\n                  <TableRow \r\n                    role=\"checkbox\" \r\n                    tabIndex={-1} \r\n                    key={index} \r\n                    className={idPaginaSelect && idPaginaSelect === el._id ? \"background-gris_500\" : \"\"}\r\n                  >\r\n                    <TableCell>{el.NOMBRE_MENU}</TableCell>\r\n                    <TableCell>{el.PATH}</TableCell>\r\n                    <TableCell>\r\n                      <Stack direction=\"row\" spacing={1}>\r\n                        <Controls.ButtonIconComponent\r\n                          title=\"Ver\"\r\n                          icon={ICON.PASS_VISIBLE}\r\n                          onClick={() => searchSubPaginas(el._id)}\r\n                        />\r\n                      </Stack>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n                  <TableCell colSpan={4} align=\"center\">\r\n                    Todavía no se insertó ningun registro\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            </Table>\r\n          \r\n          </Controls.TableComponents>  \r\n        </Grid> \r\n        \r\n        <Grid item xs={6}>\r\n          <Controls.TableComponents\r\n            pagination={paginationSubpaginas}\r\n            setPagination={setPaginationSubpaginas}\r\n          >\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Nombre</TableCell>\r\n                  <TableCell>Ruta</TableCell>\r\n                  <TableCell>\r\n                    <Controls.ButtonComponent \r\n                      title=\"configurar\"\r\n                      variant=\"primary-small\"\r\n                      type=\"admin\"\r\n                      icon={ICON.SAVE}\r\n                      onClick={() => redirecConfiguracion()}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {subpaginas.length > 0 ? (\r\n                subpaginas.slice(\r\n                  paginationSubpaginas.page * paginationSubpaginas.rowsPerPage,\r\n                  paginationSubpaginas.page * paginationSubpaginas.rowsPerPage +\r\n                    paginationSubpaginas.rowsPerPage\r\n                ).map((el, index) => (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    <TableCell>{el.NOMBRE_SUBMENU}</TableCell>\r\n                    <TableCell>{el.PATH}</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n                  <TableCell colSpan={4} align=\"center\">\r\n                    Todavía no se insertó ningun registro\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            </Table>\r\n          \r\n          </Controls.TableComponents>  \r\n        </Grid> \r\n      </Grid>\r\n    </Box>\r\n  )\r\n}","import {\r\n  Box,\r\n  Grid,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ButtonsSearchComponent from \"../../../../components/utilComponents/ButtonsSearchComponent\";\r\nimport { CONFIG_SUBMENU_INDEX, CONFIG_SUBMENU_NEW, CONFIG_SUBMENU_DELETE } from \"../../../../config/router/path\";\r\nimport Controls from \"../../../../framework/components/Controls\";\r\nimport { ICON } from \"../../../../framework/components/icons/Icon\";\r\nimport { SaveRequestData } from \"../../../../helpers/helpRequestBackend\";\r\nimport { useForm } from \"../../../../hooks/useForm\";\r\nimport { useFormValidation } from \"../../../../hooks/useFormValidation\";\r\nimport useLoaderContext from \"../../../../hooks/useLoaderContext\";\r\nimport {deleteSubmenu, listSubmenu, saveSubmenu} from \"../../../../services/configuracion_submenu.axios\";\r\nimport { AlertUtilDelete, AlertUtilRelease } from \"../../../../util/AlertUtil\";\r\nimport { MessageUtil } from \"../../../../util/MessageUtil\";\r\n\r\nconst dataInitialSubPaginas = {\r\n  NOMBRE_SUBMENU: null,\r\n  NOMBRE_ICON: null,\r\n  PATH: null,\r\n  ESTADO:  true\r\n};\r\n\r\nconst dataInitialFilter = {\r\n  NOMBRE_SUBMENU: null,\r\n  PATH: null,\r\n  ESTADO:  true\r\n}\r\n\r\nconst paginate = {\r\n  rowsPerPage: 10,\r\n  page: 0,\r\n  count: 0\r\n}\r\n\r\nconst listEstado = [\r\n  { label: \"Activo\", value: true },\r\n  { label: \"Inactivo\", value: false },\r\n]\r\n\r\nexport default function SubpaginasDetail() {\r\n  const [paginas, setPaginas] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false)\r\n  const {data, setData, errors, handleInputFormChange, resetForm} = useFormValidation(dataInitialSubPaginas, true)\r\n  const [dataForm, handleInputChange, resetData] = useForm(dataInitialFilter)\r\n  const [pagination, setPagination] = useState(paginate)\r\n  const setLoader = useLoaderContext()\r\n\r\n  const getSubPaginas = (rowsPerPage = 10, page = 1) => {\r\n    setLoader(true)\r\n    SaveRequestData({\r\n      path: CONFIG_SUBMENU_INDEX,\r\n      body: dataForm,\r\n      fnRequest: listSubmenu,\r\n      pagination: true,\r\n      rowsPerPage,\r\n      page,\r\n      success: (resp) => {\r\n        let {rowsPerPage, count, page} = resp;\r\n        --page \r\n        setPaginas(resp.data);\r\n        setPagination({rowsPerPage, count, page})\r\n        setLoader(false)\r\n      },\r\n      error: (err) => {\r\n        setLoader(false)\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n      },\r\n    });\r\n  };\r\n\r\n  const guardarSubpaginas = () => {\r\n    setLoader(true)\r\n    SaveRequestData({\r\n      path: CONFIG_SUBMENU_NEW,\r\n      body: {...data},\r\n      fnRequest: saveSubmenu,\r\n      success: (resp) => {\r\n        getSubPaginas()\r\n        setOpenModal(false)\r\n        resetForm()\r\n        MessageUtil({ message: resp.statusText, type: \"success\", seg: 10 });\r\n        setLoader(false)\r\n      },\r\n      error: (err) => {\r\n        MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n        setLoader(false)\r\n      },\r\n    });\r\n  }\r\n\r\n  const actualizarSubmenus = (submenu) => {\r\n    setData(submenu)\r\n    setOpenModal(true)\r\n  }\r\n\r\n  const deletePagina = (id) => {\r\n    const config = {\r\n      title: '¿Estás seguro?',\r\n      text: \"Al eliminar la página, no habrá vuelta atrás!\",\r\n      icon: 'warning',\r\n    }\r\n    \r\n    const fnRequestPage = () => {\r\n      SaveRequestData({\r\n        path: `${CONFIG_SUBMENU_DELETE}/${id}`,\r\n        body: {},\r\n        fnRequest: deleteSubmenu,\r\n        success: (resp) => {\r\n          AlertUtilRelease({\r\n            title: '¡Eliminado!',\r\n            text: resp.statusText,\r\n            icon: 'success',\r\n          })\r\n          getSubPaginas();\r\n        },\r\n        error: (err) => {\r\n          MessageUtil({ message: err.statusText, type: \"error\", seg: 10 });\r\n        },\r\n      })\r\n    }\r\n    \r\n    AlertUtilDelete(fnRequestPage, { config })\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSubPaginas()\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  \r\n  return (\r\n    <>\r\n      <Box>\r\n        <Stack direction=\"row\" spacing={3}>\r\n          <Controls.Title variant=\"h1\" component=\"h1\" title=\"Sub Páginas\" />\r\n\r\n          <Controls.ButtonComponent\r\n            variant=\"primary-small\"\r\n            type=\"admin\"\r\n            title=\"Nueva Sub Página\"\r\n            onClick={() => setOpenModal(true)}\r\n          />\r\n        </Stack>\r\n\r\n        <br />\r\n        \r\n        <Box>\r\n          <Controls.TextComponent variant=\"h3\" component=\"div\">Filtros de Búsqueda</Controls.TextComponent>\r\n          <br />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <Controls.InputComponent label=\"Nombre\" name=\"NOMBRE_SUBMENU\" value={dataForm.NOMBRE_SUBMENU} onChange={handleInputChange} />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Controls.InputComponent label=\"Ruta\" name=\"PATH\" value={dataForm.PATH} onChange={handleInputChange} />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Controls.SelectComponent label=\"Estado\" name=\"ESTADO\" list={listEstado} value={dataForm.ESTADO} onChange={handleInputChange} />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <ButtonsSearchComponent \r\n            resetForm={() => resetData()}\r\n            filterForm={() => getSubPaginas()}\r\n          />\r\n        </Box>\r\n\r\n        <br />\r\n\r\n        <Controls.TableComponents\r\n          pagination={pagination}\r\n          setPagination={setPagination}\r\n          fnPagination={getSubPaginas}\r\n        >\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Nombre</TableCell>\r\n                <TableCell>Ruta</TableCell>\r\n                <TableCell>Icon</TableCell>\r\n                <TableCell>Operación</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {paginas.length > 0 ? (\r\n                paginas.map((el, index) => (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    <TableCell>{el.NOMBRE_SUBMENU}</TableCell>\r\n                    <TableCell>{el.PATH}</TableCell>\r\n                    <TableCell>{el.NOMBRE_ICON}</TableCell>\r\n                    <TableCell>\r\n                      <Stack direction=\"row\" spacing={1}>\r\n                        <Controls.ButtonIconComponent\r\n                          title=\"Editar\"\r\n                          icon={ICON.EDIT}\r\n                          onClick={() => actualizarSubmenus(el)}\r\n                        />\r\n\r\n                        <Controls.ButtonIconComponent\r\n                          title=\"Eliminar\"\r\n                          icon={ICON.DELETE}\r\n                          onClick={() => deletePagina(el._id)}\r\n                        />\r\n                      </Stack>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n                  <TableCell colSpan={4} align=\"center\">\r\n                    Todavía no se insertó ningun registro\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </Controls.TableComponents>\r\n      </Box>\r\n      <Controls.Modal\r\n        open={openModal}\r\n        setOpen={setOpenModal}\r\n        title={data._id ? \"Editar Sub Página\" : \"Agregar Nueva Sub Página\"}\r\n        resetForm={resetForm}\r\n        fullWidth={true}\r\n        maxWidth=\"sm\"\r\n      >\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Controls.InputComponent\r\n              label=\"Nombre de la página\"\r\n              name=\"NOMBRE_SUBMENU\"\r\n              value={data.NOMBRE_SUBMENU}\r\n              onChange={handleInputFormChange}\r\n              error={errors.NOMBRE_SUBMENU}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Controls.InputComponent\r\n              label=\"Nombre del icono\"\r\n              name=\"NOMBRE_ICON\"\r\n              value={data.NOMBRE_ICON}\r\n              onChange={handleInputFormChange}\r\n              error={errors.NOMBRE_ICON}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Controls.InputComponent\r\n              label=\"Nombre de la ruta\"\r\n              name=\"PATH\"\r\n              value={data.PATH}\r\n              onChange={handleInputFormChange}\r\n              error={errors.PATH}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Controls.SelectComponent\r\n              label=\"Estado\"\r\n              name=\"ESTADO\"\r\n              list={listEstado}\r\n              value={data.ESTADO}\r\n              onChange={handleInputFormChange}\r\n              error={errors.ESTADO}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Stack direction=\"row\" spacing={3} justifyContent=\"center\">\r\n              <Controls.ButtonComponent\r\n                title=\"VOLVER\"\r\n                variant=\"secondary-normal\"\r\n                type=\"admin\"\r\n                icon={ICON.BACK}\r\n                onClick={() => setOpenModal(false)}\r\n              />\r\n              <Controls.ButtonComponent\r\n                title={data._id ? \"Editar\" : \"Guardar\"}\r\n                variant=\"primary-normal\"\r\n                type=\"admin\"\r\n                icon={ICON.SAVE}\r\n                onClick={() => guardarSubpaginas()}\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n      </Controls.Modal>\r\n    </>\r\n  );\r\n}\r\n"],"names":["React","value","setValue","sx","width","borderBottom","borderColor","onChange","event","newValue","label","id","index","paginate","rowsPerPage","page","count","dataInitialPaginas","NOMBRE_MENU","NOMBRE_ICON","PATH","ESTADO","dataInitialFilter","listEstado","PaginasDetail","useState","paginas","setPaginas","openModal","setOpenModal","useFormValidation","data","setData","errors","handleInputFormChange","resetForm","useForm","dataForm","handleDataFormChange","resetData","pagination","setPagination","setLoader","useLoaderContext","getPaginas","SaveRequestData","path","CONFIG_INDEX","body","fnRequest","listMenu","success","resp","error","err","MessageUtil","message","statusText","type","seg","useEffect","direction","spacing","variant","component","title","onClick","container","item","xs","name","list","filterForm","fnPagination","stickyHeader","length","map","el","hover","role","tabIndex","icon","ICON","editarPagina","_id","AlertUtilDelete","CONFIG_DELETE","deleteMenu","AlertUtilRelease","text","config","colSpan","align","open","setOpen","fullWidth","maxWidth","justifyContent","console","log","pathServer","SERVICES_POST","paginateSubpaginas","PaginasDetailConfiguracion","paginationSubpaginas","setPaginationSubpaginas","subpaginas","setSubpaginas","idPaginaSelect","setIdPaginaSelect","navigate","useNavigate","className","idPagina","arrSubpaginas","ID_CONFIGURACION_SUBMENU","pathFront","slice","NOMBRE_SUBMENU","dataInitialSubPaginas","SubpaginasDetail","handleInputChange","getSubPaginas","CONFIG_SUBMENU_INDEX","listSubmenu","CONFIG_SUBMENU_DELETE","deleteSubmenu","CONFIG_SUBMENU_NEW","saveSubmenu"],"sourceRoot":""}